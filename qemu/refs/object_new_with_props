<dec f='codebrowser/include/qom/object.h' l='638' type='Object * object_new_with_props(const char * typename, Object * parent, const char * id, Error ** errp)'/>
<doc f='codebrowser/include/qom/object.h' l='589'>/**
 * object_new_with_props:
 * @typename:  The name of the type of the object to instantiate.
 * @parent: the parent object
 * @id: The unique ID of the object
 * @errp: pointer to error object
 * @...: list of property names and values
 *
 * This function will initialize a new object using heap allocated memory.
 * The returned object has a reference count of 1, and will be freed when
 * the last reference is dropped.
 *
 * The @id parameter will be used when registering the object as a
 * child of @parent in the composition tree.
 *
 * The variadic parameters are a list of pairs of (propname, propvalue)
 * strings. The propname of %NULL indicates the end of the property
 * list. If the object implements the user creatable interface, the
 * object will be marked complete once all the properties have been
 * processed.
 *
 * &lt;example&gt;
 *   &lt;title&gt;Creating an object with properties&lt;/title&gt;
 *   &lt;programlisting&gt;
 *   Error *err = NULL;
 *   Object *obj;
 *
 *   obj = object_new_with_props(TYPE_MEMORY_BACKEND_FILE,
 *                               object_get_objects_root(),
 *                               &quot;hostmem0&quot;,
 *                               &amp;err,
 *                               &quot;share&quot;, &quot;yes&quot;,
 *                               &quot;mem-path&quot;, &quot;/dev/shm/somefile&quot;,
 *                               &quot;prealloc&quot;, &quot;yes&quot;,
 *                               &quot;size&quot;, &quot;1048576&quot;,
 *                               NULL);
 *
 *   if (!obj) {
 *     g_printerr(&quot;Cannot create memory backend: %s\n&quot;,
 *                error_get_pretty(err));
 *   }
 *   &lt;/programlisting&gt;
 * &lt;/example&gt;
 *
 * The returned object will have one stable reference maintained
 * for as long as it is present in the object hierarchy.
 *
 * Returns: The newly allocated, instantiated &amp; initialized object.
 */</doc>
<def f='codebrowser/qom/object.c' l='497' ll='511' type='Object * object_new_with_props(const char * typename, Object * parent, const char * id, Error ** errp)'/>
<use f='codebrowser/ui/vnc.c' l='3379' u='c' c='vnc_display_create_creds'/>
<use f='codebrowser/ui/vnc.c' l='3388' u='c' c='vnc_display_create_creds'/>
