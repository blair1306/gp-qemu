<dec f='codebrowser/include/crypto/hmac.h' l='55' type='QCryptoHmac * qcrypto_hmac_new(QCryptoHashAlgorithm alg, const uint8_t * key, size_t nkey, Error ** errp)'/>
<doc f='codebrowser/include/crypto/hmac.h' l='36'>/**
 * qcrypto_hmac_new:
 * @alg: the hmac algorithm
 * @key: the key bytes
 * @nkey: the length of @key
 * @errp: pointer to a NULL-initialized error object
 *
 * Creates a new hmac object with the algorithm @alg
 *
 * The @key parameter provides the bytes representing
 * the secret key to use. The @nkey parameter specifies
 * the length of @key in bytes
 *
 * Note: must use qcrypto_hmac_free() to release the
 * returned hmac object when no longer required
 *
 * Returns:
 *  a new hmac object, or NULL on error
 */</doc>
<def f='codebrowser/crypto/hmac.c' l='87' ll='119' type='QCryptoHmac * qcrypto_hmac_new(QCryptoHashAlgorithm alg, const uint8_t * key, size_t nkey, Error ** errp)'/>
