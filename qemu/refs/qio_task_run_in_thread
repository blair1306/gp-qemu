<dec f='codebrowser/include/io/task.h' l='235' type='void qio_task_run_in_thread(QIOTask * task, QIOTaskWorker worker, gpointer opaque, GDestroyNotify destroy)'/>
<doc f='codebrowser/include/io/task.h' l='224'>/**
 * qio_task_run_in_thread:
 * @task: the task struct
 * @worker: the function to invoke in a thread
 * @opaque: opaque data to pass to @worker
 * @destroy: function to free @opaque
 *
 * Run a task in a background thread. When @worker
 * returns it will call qio_task_complete() in
 * the main event thread context.
 */</doc>
<use f='codebrowser/io/channel-socket.c' l='187' u='c' c='qio_channel_socket_connect_async'/>
<use f='codebrowser/io/channel-socket.c' l='245' u='c' c='qio_channel_socket_listen_async'/>
<use f='codebrowser/io/channel-socket.c' l='321' u='c' c='qio_channel_socket_dgram_async'/>
<use f='codebrowser/io/dns-resolver.c' l='233' u='c' c='qio_dns_resolver_lookup_async'/>
<def f='codebrowser/io/task.c' l='118' ll='137' type='void qio_task_run_in_thread(QIOTask * task, QIOTaskWorker worker, gpointer opaque, GDestroyNotify destroy)'/>
