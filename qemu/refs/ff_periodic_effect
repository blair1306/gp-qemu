<def f='codebrowser/include/standard-headers/linux/input.h' l='380' ll='391'/>
<size>32</size>
<doc f='codebrowser/include/standard-headers/linux/input.h' l='362'>/**
 * struct ff_periodic_effect - defines parameters of a periodic force-feedback effect
 * @waveform: kind of the effect (wave)
 * @period: period of the wave (ms)
 * @magnitude: peak value
 * @offset: mean value of the wave (roughly)
 * @phase: &apos;horizontal&apos; shift
 * @envelope: envelope data
 * @custom_len: number of samples (FF_CUSTOM only)
 * @custom_data: buffer of samples (FF_CUSTOM only)
 *
 * Known waveforms - FF_SQUARE, FF_TRIANGLE, FF_SINE, FF_SAW_UP,
 * FF_SAW_DOWN, FF_CUSTOM. The exact syntax FF_CUSTOM is undefined
 * for the time being as no driver supports it yet.
 *
 * Note: the data pointed by custom_data is copied by the driver.
 * You can therefore dispose of the memory after the upload/update.
 */</doc>
<mbr r='ff_periodic_effect::waveform' o='0' t='uint16_t'/>
<mbr r='ff_periodic_effect::period' o='16' t='uint16_t'/>
<mbr r='ff_periodic_effect::magnitude' o='32' t='int16_t'/>
<mbr r='ff_periodic_effect::offset' o='48' t='int16_t'/>
<mbr r='ff_periodic_effect::phase' o='64' t='uint16_t'/>
<mbr r='ff_periodic_effect::envelope' o='80' t='struct ff_envelope'/>
<mbr r='ff_periodic_effect::custom_len' o='160' t='uint32_t'/>
<mbr r='ff_periodic_effect::custom_data' o='192' t='int16_t *'/>
