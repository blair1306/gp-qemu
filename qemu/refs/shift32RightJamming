<def f='codebrowser/fpu/softfloat-macros.h' l='102' ll='117' type='void shift32RightJamming(uint32_t a, int count, uint32_t * zPtr)'/>
<use f='codebrowser/fpu/softfloat.c' l='456' u='c' c='roundAndPackFloat32'/>
<use f='codebrowser/fpu/softfloat.c' l='2047' u='c' c='addFloat32Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='2063' u='c' c='addFloat32Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='2149' u='c' c='subFloat32Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='2169' u='c' c='subFloat32Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='2740' u='c' c='float32_sqrt'/>
<doc f='codebrowser/fpu/softfloat-macros.h' l='93'>/*----------------------------------------------------------------------------
| Shifts `a&apos; right by the number of bits given in `count&apos;.  If any nonzero
| bits are shifted off, they are ``jammed&apos;&apos; into the least significant bit of
| the result by setting the least significant bit to 1.  The value of `count&apos;
| can be arbitrarily large; in particular, if `count&apos; is greater than 32, the
| result will be either 0 or 1, depending on whether `a&apos; is zero or nonzero.
| The result is stored in the location pointed to by `zPtr&apos;.
*----------------------------------------------------------------------------*/</doc>
