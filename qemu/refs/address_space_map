<dec f='codebrowser/include/exec/memory.h' l='1892' type='void * address_space_map(AddressSpace * as, hwaddr addr, hwaddr * plen, _Bool is_write)'/>
<doc f='codebrowser/include/exec/memory.h' l='1879'>/* address_space_map: map a physical memory region into a host virtual address
 *
 * May map a subset of the requested range, given by and returned in @plen.
 * May return %NULL if resources needed to perform the mapping are exhausted.
 * Use only for reads OR writes - not for read-modify-write operations.
 * Use cpu_register_map_client() to know when retrying the map operation is
 * likely to succeed.
 *
 * @as: #AddressSpace to be accessed
 * @addr: address within that address space
 * @plen: pointer to length of buffer; updated on return
 * @is_write: indicates the transfer direction
 */</doc>
<use f='codebrowser/include/sysemu/dma.h' l='135' u='c' c='dma_memory_map'/>
<def f='codebrowser/exec.c' l='3308' ll='3356' type='void * address_space_map(AddressSpace * as, hwaddr addr, hwaddr * plen, _Bool is_write)'/>
<use f='codebrowser/exec.c' l='3395' u='c' c='cpu_physical_memory_map'/>
<doc f='codebrowser/exec.c' l='3301'>/* Map a physical memory region into a host virtual address.
 * May map a subset of the requested range, given by and returned in *plen.
 * May return NULL if resources needed to perform the mapping are exhausted.
 * Use only for reads OR writes - not for read-modify-write operations.
 * Use cpu_register_map_client() to know when retrying the map operation is
 * likely to succeed.
 */</doc>
