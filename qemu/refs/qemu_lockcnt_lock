<dec f='codebrowser/include/qemu/thread.h' l='182' type='void qemu_lockcnt_lock(QemuLockCnt * lockcnt)'/>
<doc f='codebrowser/include/qemu/thread.h' l='174'>/**
 * qemu_lockcnt_lock: lock a QemuLockCnt&apos;s mutex.
 * @lockcnt: the lockcnt to operate on
 *
 * Remember that concurrent visits are not blocked unless the count is
 * also zero.  You can use qemu_lockcnt_count to check for this inside a
 * critical section.
 */</doc>
<use f='codebrowser/util/aio-posix.c' l='215' u='c' c='aio_set_fd_handler'/>
<use f='codebrowser/util/async.c' l='59' u='c' c='aio_bh_schedule_oneshot'/>
<use f='codebrowser/util/async.c' l='79' u='c' c='aio_bh_new'/>
<use f='codebrowser/util/async.c' l='283' u='c' c='aio_ctx_finalize'/>
<def f='codebrowser/util/lockcnt.c' l='234' ll='252' type='void qemu_lockcnt_lock(QemuLockCnt * lockcnt)'/>
