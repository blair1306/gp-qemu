<dec f='codebrowser/include/io/dns-resolver.h' l='203' type='void qio_dns_resolver_lookup_async(QIODNSResolver * resolver, SocketAddress * addr, QIOTaskFunc func, gpointer opaque, GDestroyNotify notify)'/>
<def f='codebrowser/io/dns-resolver.c' l='219' ll='237' type='void qio_dns_resolver_lookup_async(QIODNSResolver * resolver, SocketAddress * addr, QIOTaskFunc func, gpointer opaque, GDestroyNotify notify)'/>
<doc f='codebrowser/include/io/dns-resolver.h' l='185'>/**
 * qio_dns_resolver_lookup_async:
 * @resolver: the DNS resolver instance
 * @addr: the address to resolve
 * @func: the callback to invoke on lookup completion
 * @opaque: data blob to pass to @func
 * @notify: the callback to free @opaque, or NULL
 *
 * This will attempt to resolve the address provided
 * in @addr. The callback @func will be invoked when
 * resolution has either completed or failed. On
 * success, the @func should call the method
 * qio_dns_resolver_lookup_result() to obtain the
 * results.
 *
 * DNS resolution will be done asynchronously so execution
 * of the caller will not be blocked.
 */</doc>
