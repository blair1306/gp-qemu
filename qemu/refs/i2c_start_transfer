<dec f='codebrowser/include/hw/i2c/i2c.h' l='64' type='int i2c_start_transfer(I2CBus * bus, uint8_t address, int recv)'/>
<def f='codebrowser/hw/i2c/core.c' l='105' ll='167' type='int i2c_start_transfer(I2CBus * bus, uint8_t address, int recv)'/>
<doc f='codebrowser/hw/i2c/core.c' l='92'>/*
 * Start or continue an i2c transaction.  When this is called for the
 * first time or after an i2c_end_transfer(), if it returns an error
 * the bus transaction is terminated (or really never started).  If
 * this is called after another i2c_start_transfer() without an
 * intervening i2c_end_transfer(), and it returns an error, the
 * transaction will not be terminated.  The caller must do it.
 *
 * This corresponds with the way real hardware works.  The SMBus
 * protocol uses a start transfer to switch from write to read mode
 * without releasing the bus.  If that fails, the bus is still
 * in a transaction.
 */</doc>
<use f='codebrowser/hw/i2c/smbus.c' l='216' u='c' c='smbus_quick_command'/>
<use f='codebrowser/hw/i2c/smbus.c' l='227' u='c' c='smbus_receive_byte'/>
<use f='codebrowser/hw/i2c/smbus.c' l='238' u='c' c='smbus_send_byte'/>
<use f='codebrowser/hw/i2c/smbus.c' l='249' u='c' c='smbus_read_byte'/>
<use f='codebrowser/hw/i2c/smbus.c' l='253' u='c' c='smbus_read_byte'/>
<use f='codebrowser/hw/i2c/smbus.c' l='265' u='c' c='smbus_write_byte'/>
<use f='codebrowser/hw/i2c/smbus.c' l='277' u='c' c='smbus_read_word'/>
<use f='codebrowser/hw/i2c/smbus.c' l='281' u='c' c='smbus_read_word'/>
<use f='codebrowser/hw/i2c/smbus.c' l='294' u='c' c='smbus_write_word'/>
<use f='codebrowser/hw/i2c/smbus.c' l='309' u='c' c='smbus_read_block'/>
<use f='codebrowser/hw/i2c/smbus.c' l='313' u='c' c='smbus_read_block'/>
<use f='codebrowser/hw/i2c/smbus.c' l='337' u='c' c='smbus_write_block'/>
