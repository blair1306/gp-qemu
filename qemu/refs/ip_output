<dec f='codebrowser/slirp/slirp.h' l='263' type='int ip_output(struct socket * , struct mbuf * )'/>
<doc f='codebrowser/slirp/slirp.h' l='262'>/* ip_output.c */</doc>
<use f='codebrowser/slirp/ip_icmp.c' l='351' u='c' c='icmp_send_error'/>
<use f='codebrowser/slirp/ip_icmp.c' l='406' u='c' c='icmp_reflect'/>
<def f='codebrowser/slirp/ip_output.c' l='54' ll='173' type='int ip_output(struct socket * so, struct mbuf * m0)'/>
<doc f='codebrowser/slirp/ip_output.c' l='48'>/*
 * IP output.  The packet in mbuf chain m contains a skeletal IP
 * header (with len, off, ttl, proto, tos, src, dst).
 * The mbuf chain containing the packet will be freed.
 * The mbuf opt, if present, will not be freed.
 */</doc>
<use f='codebrowser/slirp/tcp_output.c' l='469' u='c' c='tcp_output'/>
<use f='codebrowser/slirp/tcp_subr.c' l='218' u='c' c='tcp_respond'/>
<use f='codebrowser/slirp/udp.c' l='280' u='c' c='udp_output'/>
