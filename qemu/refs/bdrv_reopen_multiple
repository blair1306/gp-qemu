<dec f='codebrowser/include/block/block.h' l='270' type='int bdrv_reopen_multiple(AioContext * ctx, BlockReopenQueue * bs_queue, Error ** errp)'/>
<def f='codebrowser/block.c' l='2789' ll='2833' type='int bdrv_reopen_multiple(AioContext * ctx, BlockReopenQueue * bs_queue, Error ** errp)'/>
<use f='codebrowser/block.c' l='2843' u='c' c='bdrv_reopen'/>
<doc f='codebrowser/block.c' l='2774'>/*
 * Reopen multiple BlockDriverStates atomically &amp; transactionally.
 *
 * The queue passed in (bs_queue) must have been built up previous
 * via bdrv_reopen_queue().
 *
 * Reopens all BDS specified in the queue, with the appropriate
 * flags.  All devices are prepared for reopen, and failure of any
 * device will cause all device changes to be abandonded, and intermediate
 * data cleaned up.
 *
 * If all devices prepare successfully, then the changes are committed
 * to all devices.
 *
 */</doc>
<use f='codebrowser/block/commit.c' l='335' u='c' c='commit_start'/>
<use f='codebrowser/block/replication.c' l='392' u='c' c='reopen_backing_file'/>
<use f='codebrowser/qemu-io-cmds.c' l='2003' u='c' c='reopen_f'/>
