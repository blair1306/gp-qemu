<def f='codebrowser/net/queue.c' l='43' ll='50'/>
<size>40</size>
<doc f='codebrowser/net/queue.c' l='29'>/* The delivery handler may only return zero if it will call
 * qemu_net_queue_flush() when it determines that it is once again able
 * to deliver packets. It must also call qemu_net_queue_purge() in its
 * cleanup path.
 *
 * If a sent callback is provided to send(), the caller must handle a
 * zero return from the delivery handler by not sending any more packets
 * until we have invoked the callback. Only in that case will we queue
 * the packet.
 *
 * If a sent callback isn&apos;t provided, we just drop the packet to avoid
 * unbounded queueing.
 */</doc>
<mbr r='NetPacket::entry' o='0' t='struct (anonymous struct at /home/jon/workspace/qemu/net/queue.c:44:5)'/>
<mbr r='NetPacket::sender' o='128' t='NetClientState *'/>
<mbr r='NetPacket::flags' o='192' t='unsigned int'/>
<mbr r='NetPacket::size' o='224' t='int'/>
<mbr r='NetPacket::sent_cb' o='256' t='NetPacketSent *'/>
<mbr r='NetPacket::data' o='320' t='uint8_t [0]'/>
