<def f='codebrowser/tcg/i386/tcg-target.inc.c' l='1264' ll='1346' type='void tcg_out_tlb_load(TCGContext * s, TCGReg addrlo, TCGReg addrhi, int mem_index, TCGMemOp opc, tcg_insn_unit ** label_ptr, int which)'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1666' u='c' c='tcg_out_qemu_ld'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1806' u='c' c='tcg_out_qemu_st'/>
<doc f='codebrowser/tcg/i386/tcg-target.inc.c' l='1243'>/* Perform the TLB load and compare.

   Inputs:
   ADDRLO and ADDRHI contain the low and high part of the address.

   MEM_INDEX and S_BITS are the memory context and log2 size of the load.

   WHICH is the offset into the CPUTLBEntry structure of the slot to read.
   This should be offsetof addr_read or addr_write.

   Outputs:
   LABEL_PTRS is filled with 1 (32-bit addresses) or 2 (64-bit addresses)
   positions of the displacements of forward jumps to the TLB miss case.

   Second argument register is loaded with the low part of the address.
   In the TLB hit case, it has been adjusted as indicated by the TLB
   and so is a host address.  In the TLB miss case, it continues to
   hold a guest address.

   First argument register is clobbered.  */</doc>
