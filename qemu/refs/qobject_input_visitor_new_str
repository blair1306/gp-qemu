<dec f='codebrowser/include/qapi/qobject-input-visitor.h' l='79' type='Visitor * qobject_input_visitor_new_str(const char * str, const char * implied_key, Error ** errp)'/>
<doc f='codebrowser/include/qapi/qobject-input-visitor.h' l='71'>/*
 * Create a QObject input visitor for parsing @str.
 *
 * If @str looks like JSON, parse it as JSON, else as KEY=VALUE,...
 * @implied_key applies to KEY=VALUE, and works as in keyval_parse().
 * On failure, store an error through @errp and return NULL.
 * On success, return a new QObject input visitor for the parse.
 */</doc>
<def f='codebrowser/qapi/qobject-input-visitor.c' l='713' ll='745' type='Visitor * qobject_input_visitor_new_str(const char * str, const char * implied_key, Error ** errp)'/>
<use f='codebrowser/vl.c' l='3181' u='c' c='main'/>
