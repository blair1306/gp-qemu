<dec f='codebrowser/include/crypto/tlssession.h' l='245' type='ssize_t qcrypto_tls_session_read(QCryptoTLSSession * sess, char * buf, size_t len)'/>
<doc f='codebrowser/include/crypto/tlssession.h' l='228'>/**
 * qcrypto_tls_session_read:
 * @sess: the TLS session object
 * @buf: to fill with plain text received
 * @len: the length of @buf
 *
 * Receive up to @len bytes of data from the remote peer
 * using the callback previously registered with
 * qcrypto_tls_session_set_callbacks(), decrypt it and
 * store it in @buf.
 *
 * It is an error to call this before
 * qcrypto_tls_session_get_handshake_status() returns
 * QCRYPTO_TLS_HANDSHAKE_COMPLETE
 *
 * Returns: the number of bytes received, or -1 on error
 */</doc>
<def f='codebrowser/crypto/tlssession.c' l='553' ll='560' type='ssize_t qcrypto_tls_session_read(QCryptoTLSSession * sess, char * buf, size_t len)'/>
<use f='codebrowser/io/channel-tls.c' l='245' u='c' c='qio_channel_tls_readv'/>
