<dec f='codebrowser/include/exec/memory.h' l='437' type='void memory_region_init_ram_nomigrate(MemoryRegion * mr, struct Object * owner, const char * name, uint64_t size, Error ** errp)'/>
<doc f='codebrowser/include/exec/memory.h' l='422'>/**
 * memory_region_init_ram_nomigrate:  Initialize RAM memory region.  Accesses
 *                                    into the region will modify memory
 *                                    directly.
 *
 * @mr: the #MemoryRegion to be initialized.
 * @owner: the object that tracks the region&apos;s reference count
 * @name: Region name, becomes part of RAMBlock name used in migration stream
 *        must be unique within any device
 * @size: size of the region.
 * @errp: pointer to Error*, to store an error if it happens.
 *
 * Note that this function does not do anything to cause the data in the
 * RAM memory region to be migrated; that is the responsibility of the caller.
 */</doc>
<use f='codebrowser/backends/hostmem-ram.c' l='31' u='c' c='ram_backend_memory_alloc'/>
<use f='codebrowser/hw/display/vga.c' l='2169' u='c' c='vga_common_init'/>
<use f='codebrowser/hw/i386/pci-assign-load-rom.c' l='62' u='c' c='pci_assign_dev_load_option_rom'/>
<def f='codebrowser/memory.c' l='1369' ll='1381' type='void memory_region_init_ram_nomigrate(MemoryRegion * mr, Object * owner, const char * name, uint64_t size, Error ** errp)'/>
<use f='codebrowser/memory.c' l='2861' u='c' c='memory_region_init_ram'/>
<use f='codebrowser/numa.c' l='545' u='c' c='allocate_system_memory_nonnuma'/>
<use f='codebrowser/numa.c' l='552' u='c' c='allocate_system_memory_nonnuma'/>
