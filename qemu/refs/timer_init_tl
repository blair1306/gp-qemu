<dec f='codebrowser/include/qemu/timer.h' l='420' type='void timer_init_tl(QEMUTimer * ts, QEMUTimerList * timer_list, int scale, QEMUTimerCB * cb, void * opaque)'/>
<use f='codebrowser/include/qemu/timer.h' l='441' u='c' c='timer_init'/>
<use f='codebrowser/include/qemu/timer.h' l='522' u='c' c='timer_new_tl'/>
<use f='codebrowser/include/block/aio.h' l='427' u='c' c='aio_timer_init'/>
<doc f='codebrowser/include/qemu/timer.h' l='406'>/**
 * timer_init_tl:
 * @ts: the timer to be initialised
 * @timer_list: the timer list to attach the timer to
 * @scale: the scale value for the timer
 * @cb: the callback to be called when the timer expires
 * @opaque: the opaque pointer to be passed to the callback
 *
 * Initialise a new timer and associate it with @timer_list.
 * The caller is responsible for allocating the memory.
 *
 * You need not call an explicit deinit call. Simply make
 * sure it is not on a list with timer_del.
 */</doc>
<def f='codebrowser/util/qemu-timer.c' l='342' ll='351' type='void timer_init_tl(QEMUTimer * ts, QEMUTimerList * timer_list, int scale, QEMUTimerCB * cb, void * opaque)'/>
