<dec f='codebrowser/include/exec/memory.h' l='511' type='void memory_region_init_ram_from_fd(MemoryRegion * mr, struct Object * owner, const char * name, uint64_t size, _Bool share, int fd, Error ** errp)'/>
<doc f='codebrowser/include/exec/memory.h' l='496'>/**
 * memory_region_init_ram_from_fd:  Initialize RAM memory region with a
 *                                  mmap-ed backend.
 *
 * @mr: the #MemoryRegion to be initialized.
 * @owner: the object that tracks the region&apos;s reference count
 * @name: the name of the region.
 * @size: size of the region.
 * @share: %true if memory must be mmaped with the MAP_SHARED flag
 * @fd: the fd to mmap.
 * @errp: pointer to Error*, to store an error if it happens.
 *
 * Note that this function does not do anything to cause the data in the
 * RAM memory region to be migrated; that is the responsibility of the caller.
 */</doc>
<use f='codebrowser/hw/misc/ivshmem.c' l='525' u='c' c='process_msg_shmem'/>
<def f='codebrowser/memory.c' l='1419' ll='1433' type='void memory_region_init_ram_from_fd(MemoryRegion * mr, struct Object * owner, const char * name, uint64_t size, _Bool share, int fd, Error ** errp)'/>
