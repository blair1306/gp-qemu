<dec f='codebrowser/include/fpu/softfloat.h' l='393' type='uint64_t float32_to_uint64(float32 , float_status * status)'/>
<def f='codebrowser/fpu/softfloat.c' l='1730' ll='1763' type='uint64_t float32_to_uint64(float32 a, float_status * status)'/>
<use f='codebrowser/fpu/softfloat.c' l='1780' u='c' c='float32_to_uint64_round_to_zero'/>
<doc f='codebrowser/fpu/softfloat.c' l='1718'>/*----------------------------------------------------------------------------
| Returns the result of converting the single-precision floating-point value
| `a&apos; to the 64-bit unsigned integer format.  The conversion is
| performed according to the IEC/IEEE Standard for Binary Floating-Point
| Arithmetic---which means in particular that the conversion is rounded
| according to the current rounding mode.  If `a&apos; is a NaN, the largest
| unsigned integer is returned.  Otherwise, if the conversion overflows, the
| largest unsigned integer is returned.  If the &apos;a&apos; is negative, the result
| is rounded and zero is returned; values that do not round to zero will
| raise the inexact exception flag.
*----------------------------------------------------------------------------*/</doc>
