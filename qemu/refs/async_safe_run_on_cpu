<dec f='codebrowser/include/qom/cpu.h' l='735' type='void async_safe_run_on_cpu(CPUState * cpu, run_on_cpu_func func, run_on_cpu_data data)'/>
<doc f='codebrowser/include/qom/cpu.h' l='723'>/**
 * async_safe_run_on_cpu:
 * @cpu: The vCPU to run on.
 * @func: The function to be executed.
 * @data: Data to pass to the function.
 *
 * Schedules the function @func for execution on the vCPU @cpu asynchronously,
 * while all other vCPUs are sleeping.
 *
 * Unlike run_on_cpu and async_run_on_cpu, the function is run outside the
 * BQL.
 */</doc>
<use f='codebrowser/accel/tcg/cputlb.c' l='161' u='c' c='tlb_flush_all_cpus_synced'/>
<use f='codebrowser/accel/tcg/cputlb.c' l='232' u='c' c='tlb_flush_by_mmuidx_all_cpus_synced'/>
<use f='codebrowser/accel/tcg/cputlb.c' l='406' u='c' c='tlb_flush_page_by_mmuidx_all_cpus_synced'/>
<use f='codebrowser/accel/tcg/cputlb.c' l='423' u='c' c='tlb_flush_page_all_cpus_synced'/>
<use f='codebrowser/accel/tcg/translate-all.c' l='936' u='c' c='tb_flush'/>
<def f='codebrowser/cpus-common.c' l='299' ll='311' type='void async_safe_run_on_cpu(CPUState * cpu, run_on_cpu_func func, run_on_cpu_data data)'/>
<use f='codebrowser/hw/i386/kvmvapic.c' l='459' u='c' c='patch_instruction'/>
<use f='codebrowser/memory.c' l='2572' u='c' c='memory_region_invalidate_mmio_ptr'/>
