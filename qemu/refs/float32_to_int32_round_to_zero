<dec f='codebrowser/include/fpu/softfloat.h' l='389' type='int32_t float32_to_int32_round_to_zero(float32 , float_status * status)'/>
<def f='codebrowser/fpu/softfloat.c' l='1594' ll='1628' type='int32_t float32_to_int32_round_to_zero(float32 a, float_status * status)'/>
<doc f='codebrowser/fpu/softfloat.c' l='1584'>/*----------------------------------------------------------------------------
| Returns the result of converting the single-precision floating-point value
| `a&apos; to the 32-bit two&apos;s complement integer format.  The conversion is
| performed according to the IEC/IEEE Standard for Binary Floating-Point
| Arithmetic, except that the conversion is always rounded toward zero.
| If `a&apos; is a NaN, the largest positive integer is returned.  Otherwise, if
| the conversion overflows, the largest integer with the same sign as `a&apos; is
| returned.
*----------------------------------------------------------------------------*/</doc>
<use f='codebrowser/target/i386/ops_sse.h' l='1258' u='c' c='helper_pf2id'/>
<use f='codebrowser/target/i386/ops_sse.h' l='1259' u='c' c='helper_pf2id'/>
<use f='codebrowser/target/i386/ops_sse.h' l='1264' u='c' c='helper_pf2iw'/>
<use f='codebrowser/target/i386/ops_sse.h' l='1266' u='c' c='helper_pf2iw'/>
<use f='codebrowser/target/i386/ops_sse.h' l='765' u='c' c='helper_cvttps2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='766' u='c' c='helper_cvttps2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='767' u='c' c='helper_cvttps2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='768' u='c' c='helper_cvttps2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='780' u='c' c='helper_cvttps2pi'/>
<use f='codebrowser/target/i386/ops_sse.h' l='781' u='c' c='helper_cvttps2pi'/>
<use f='codebrowser/target/i386/ops_sse.h' l='792' u='c' c='helper_cvttss2si'/>
