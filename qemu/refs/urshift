<dec f='codebrowser/include/qemu/host-utils.h' l='406' type='void urshift(uint64_t * plow, uint64_t * phigh, int32_t shift)'/>
<doc f='codebrowser/include/qemu/host-utils.h' l='395'>/**
 * urshift - 128-bit Unsigned Right Shift.
 * @plow: in/out - lower 64-bit integer.
 * @phigh: in/out - higher 64-bit integer.
 * @shift: in - bytes to shift, between 0 and 127.
 *
 * Result is zero-extended and stored in plow/phigh, which are
 * input/output variables. Shift values outside the range will
 * be mod to 128. In other words, the caller is responsible to
 * verify/assert both the shift range and plow/phigh pointers.
 */</doc>
<def f='codebrowser/util/host-utils.c' l='175' ll='190' type='void urshift(uint64_t * plow, uint64_t * phigh, int32_t shift)'/>
<use f='codebrowser/util/host-utils.c' l='215' u='c' c='ulshift'/>
<doc f='codebrowser/util/host-utils.c' l='164'>/**
 * urshift - 128-bit Unsigned Right Shift.
 * @plow: in/out - lower 64-bit integer.
 * @phigh: in/out - higher 64-bit integer.
 * @shift: in - bytes to shift, between 0 and 127.
 *
 * Result is zero-extended and stored in plow/phigh, which are
 * input/output variables. Shift values outside the range will
 * be mod to 128. In other words, the caller is responsible to
 * verify/assert both the shift range and plow/phigh pointers.
 */</doc>
