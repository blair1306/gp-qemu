<dec f='codebrowser/migration/ram.h' l='52' type='int ram_postcopy_incoming_init(MigrationIncomingState * mis)'/>
<def f='codebrowser/migration/ram.c' l='2348' ll='2353' type='int ram_postcopy_incoming_init(MigrationIncomingState * mis)'/>
<doc f='codebrowser/migration/ram.c' l='2337'>/**
 * ram_postcopy_incoming_init: allocate postcopy data structures
 *
 * Returns 0 for success and negative if there was one error
 *
 * @mis: current migration incoming state
 *
 * Allocate data structures etc needed by incoming migration with
 * postcopy-ram. postcopy-ram&apos;s similarly names
 * postcopy_ram_incoming_init does the work.
 */</doc>
<use f='codebrowser/migration/savevm.c' l='1393' u='c' c='loadvm_postcopy_handle_advise'/>
