<def f='codebrowser/fpu/softfloat-specialize.h' l='1117' ll='1150' type='floatx80 propagateFloatx80NaN(floatx80 a, floatx80 b, float_status * status)'/>
<use f='codebrowser/fpu/softfloat.c' l='5125' u='c' c='floatx80_round_to_int'/>
<use f='codebrowser/fpu/softfloat.c' l='5225' u='c' c='addFloatx80Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='5236' u='c' c='addFloatx80Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='5247' u='c' c='addFloatx80Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='5295' u='c' c='subFloatx80Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='5311' u='c' c='subFloatx80Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='5325' u='c' c='subFloatx80Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='5415' u='c' c='floatx80_mul'/>
<use f='codebrowser/fpu/softfloat.c' l='5422' u='c' c='floatx80_mul'/>
<use f='codebrowser/fpu/softfloat.c' l='5475' u='c' c='floatx80_div'/>
<use f='codebrowser/fpu/softfloat.c' l='5479' u='c' c='floatx80_div'/>
<use f='codebrowser/fpu/softfloat.c' l='5487' u='c' c='floatx80_div'/>
<use f='codebrowser/fpu/softfloat.c' l='5559' u='c' c='floatx80_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='5565' u='c' c='floatx80_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='5655' u='c' c='floatx80_sqrt'/>
<use f='codebrowser/fpu/softfloat.c' l='7860' u='c' c='floatx80_scalbn'/>
<doc f='codebrowser/fpu/softfloat-specialize.h' l='1111'>/*----------------------------------------------------------------------------
| Takes two extended double-precision floating-point values `a&apos; and `b&apos;, one
| of which is a NaN, and returns the appropriate NaN result.  If either `a&apos; or
| `b&apos; is a signaling NaN, the invalid exception is raised.
*----------------------------------------------------------------------------*/</doc>
