<dec f='codebrowser/include/block/blockjob.h' l='180' type='int block_job_add_bdrv(BlockJob * job, const char * name, BlockDriverState * bs, uint64_t perm, uint64_t shared_perm, Error ** errp)'/>
<doc f='codebrowser/include/block/blockjob.h' l='169'>/**
 * block_job_add_bdrv:
 * @job: A block job
 * @name: The name to assign to the new BdrvChild
 * @bs: A BlockDriverState that is involved in @job
 * @perm, @shared_perm: Permissions to request on the node
 *
 * Add @bs to the list of BlockDriverState that are involved in
 * @job. This means that all operations will be blocked on @bs while
 * @job exists.
 */</doc>
<use f='codebrowser/block/backup.c' l='664' u='c' c='backup_job_create'/>
<use f='codebrowser/block/commit.c' l='381' u='c' c='commit_start'/>
<use f='codebrowser/block/commit.c' l='389' u='c' c='commit_start'/>
<use f='codebrowser/block/commit.c' l='396' u='c' c='commit_start'/>
<use f='codebrowser/block/mirror.c' l='1245' u='c' c='mirror_start_job'/>
<use f='codebrowser/block/mirror.c' l='1257' u='c' c='mirror_start_job'/>
<use f='codebrowser/block/stream.c' l='262' u='c' c='stream_start'/>
<def f='codebrowser/blockjob.c' l='249' ll='265' type='int block_job_add_bdrv(BlockJob * job, const char * name, BlockDriverState * bs, uint64_t perm, uint64_t shared_perm, Error ** errp)'/>
<use f='codebrowser/blockjob.c' l='670' u='c' c='block_job_create'/>
