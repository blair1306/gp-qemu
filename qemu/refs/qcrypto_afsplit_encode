<dec f='codebrowser/include/crypto/afsplit.h' l='106' type='int qcrypto_afsplit_encode(QCryptoHashAlgorithm hash, size_t blocklen, uint32_t stripes, const uint8_t * in, uint8_t * out, Error ** errp)'/>
<def f='codebrowser/crypto/afsplit.c' l='90' ll='124' type='int qcrypto_afsplit_encode(QCryptoHashAlgorithm hash, size_t blocklen, uint32_t stripes, const uint8_t * in, uint8_t * out, Error ** errp)'/>
<doc f='codebrowser/include/crypto/afsplit.h' l='91'>/**
 * qcrypto_afsplit_encode:
 * @hash: the hash algorithm to use for data expansion
 * @blocklen: the size of @in in bytes
 * @stripes: the number of times to expand @in in size
 * @in: the master key to be expanded in size
 * @out: preallocated buffer to hold the split key
 * @errp: pointer to a NULL-initialized error object
 *
 * Split the data in @in, which is @blocklen bytes in
 * size, to form a larger piece of data @out, which is
 * @blocklen * @stripes bytes in size.
 *
 * Returns: 0 on success, -1 on error;
 */</doc>
<use f='codebrowser/crypto/block-luks.c' l='1216' u='c' c='qcrypto_block_luks_create'/>
