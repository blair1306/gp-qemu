<dec f='codebrowser/include/block/block_int.h' l='498' type='void (*)(BdrvChild *)'/>
<use f='codebrowser/block.c' l='881' u='w'/>
<use f='codebrowser/block.c' l='903' u='w'/>
<use f='codebrowser/block.c' l='989' u='w'/>
<use f='codebrowser/block.c' l='1907' u='r' c='bdrv_replace_child_noperm'/>
<use f='codebrowser/block.c' l='1908' u='r' c='bdrv_replace_child_noperm'/>
<offset>384</offset>
<doc f='codebrowser/include/block/block_int.h' l='490'>/*
     * If this pair of functions is implemented, the parent doesn&apos;t issue new
     * requests after returning from .drained_begin() until .drained_end() is
     * called.
     *
     * Note that this can be nested. If drained_begin() was called twice, new
     * I/O is allowed only after drained_end() was called twice, too.
     */</doc>
<use f='codebrowser/block/block-backend.c' l='190' u='w'/>
<use f='codebrowser/block/io.c' l='45' u='r' c='bdrv_parent_drained_begin'/>
<use f='codebrowser/block/io.c' l='46' u='r' c='bdrv_parent_drained_begin'/>
