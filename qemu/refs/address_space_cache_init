<dec f='codebrowser/include/exec/memory.h' l='1749' type='int64_t address_space_cache_init(MemoryRegionCache * cache, AddressSpace * as, hwaddr addr, hwaddr len, _Bool is_write)'/>
<doc f='codebrowser/include/exec/memory.h' l='1730'>/* address_space_cache_init: prepare for repeated access to a physical
 * memory region
 *
 * @cache: #MemoryRegionCache to be filled
 * @as: #AddressSpace to be accessed
 * @addr: address within that address space
 * @len: length of buffer
 * @is_write: indicates the transfer direction
 *
 * Will only work with RAM, and may map a subset of the requested range by
 * returning a value that is less than @len.  On failure, return a negative
 * errno value.
 *
 * Because it only works with RAM, this function can be used for
 * read-modify-write operations.  In this case, is_write should be %true.
 *
 * Note that addresses passed to the address_space_*_cached functions
 * are relative to @addr.
 */</doc>
<def f='codebrowser/exec.c' l='3415' ll='3425' type='int64_t address_space_cache_init(MemoryRegionCache * cache, AddressSpace * as, hwaddr addr, hwaddr len, _Bool is_write)'/>
<use f='codebrowser/hw/virtio/virtio.c' l='143' u='c' c='virtio_init_region_cache'/>
<use f='codebrowser/hw/virtio/virtio.c' l='151' u='c' c='virtio_init_region_cache'/>
<use f='codebrowser/hw/virtio/virtio.c' l='159' u='c' c='virtio_init_region_cache'/>
<use f='codebrowser/hw/virtio/virtio.c' l='639' u='c' c='virtqueue_get_avail_bytes'/>
<use f='codebrowser/hw/virtio/virtio.c' l='889' u='c' c='virtqueue_pop'/>
