<dec f='codebrowser/include/exec/memory.h' l='1678' type='uint32_t address_space_ldub(AddressSpace * as, hwaddr addr, MemTxAttrs attrs, MemTxResult * result)'/>
<doc f='codebrowser/include/exec/memory.h' l='1658'>/* address_space_ld*: load from an address space
 * address_space_st*: store to an address space
 *
 * These functions perform a load or store of the byte, word,
 * longword or quad to the specified address within the AddressSpace.
 * The _le suffixed functions treat the data as little endian;
 * _be indicates big endian; no suffix indicates &quot;same endianness
 * as guest CPU&quot;.
 *
 * The &quot;guest CPU endianness&quot; accessors are deprecated for use outside
 * target-* code; devices should be CPU-agnostic and use either the LE
 * or the BE accessors.
 *
 * @as #AddressSpace to be accessed
 * @addr: address within that address space
 * @val: data value, for stores
 * @attrs: memory transaction attributes
 * @result: location to write the success/failure of the transaction;
 *   if NULL, this information is discarded
 */</doc>
<use f='codebrowser/exec.c' l='2460' u='c' c='watch_mem_read'/>
<def f='codebrowser/memory_ldst.inc.c' l='210' ll='242' type='uint32_t address_space_ldub(AddressSpace * as, hwaddr addr, MemTxAttrs attrs, MemTxResult * result)'/>
<use f='codebrowser/memory_ldst.inc.c' l='246' u='c' c='ldub_phys'/>
<use f='codebrowser/hw/virtio/virtio-pci.c' l='608' u='c' c='virtio_address_space_read'/>
<use f='codebrowser/monitor.c' l='1582' u='c' c='hmp_sum'/>
<use f='codebrowser/target/i386/helper.c' l='1097' u='c' c='x86_ldub_phys'/>
<use f='codebrowser/target/i386/misc_helper.c' l='44' u='c' c='helper_inb'/>
