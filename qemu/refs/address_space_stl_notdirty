<dec f='codebrowser/include/exec/cpu-all.h' l='181' type='void address_space_stl_notdirty(AddressSpace * as, hwaddr addr, uint32_t val, MemTxAttrs attrs, MemTxResult * result)'/>
<def f='codebrowser/memory_ldst.inc.c' l='347' ll='381' type='void address_space_stl_notdirty(AddressSpace * as, hwaddr addr, uint32_t val, MemTxAttrs attrs, MemTxResult * result)'/>
<use f='codebrowser/memory_ldst.inc.c' l='385' u='c' c='stl_phys_notdirty'/>
<doc f='codebrowser/memory_ldst.inc.c' l='344'>/* warning: addr must be aligned. The ram page is not masked as dirty
   and the code inside is not invalidated. It is useful if the dirty
   bits are used to track modified PTEs */</doc>
<use f='codebrowser/target/i386/helper.c' l='1147' u='c' c='x86_stl_phys_notdirty'/>
