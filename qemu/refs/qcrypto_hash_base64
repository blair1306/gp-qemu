<dec f='codebrowser/include/crypto/hash.h' l='186' type='int qcrypto_hash_base64(QCryptoHashAlgorithm alg, const char * buf, size_t len, char ** base64, Error ** errp)'/>
<doc f='codebrowser/include/crypto/hash.h' l='169'>/**
 * qcrypto_hash_base64:
 * @alg: the hash algorithm
 * @buf: the memory region to hash
 * @len: the length of @buf
 * @base64: pointer to hold output hash
 * @errp: pointer to a NULL-initialized error object
 *
 * Computes the hash across all the memory region
 * @buf of length @len. The @base64 pointer will be
 * filled with the base64 encoding of the computed
 * hash, which will be terminated by &apos;\0&apos;. The
 * memory pointer in @base64 must be released
 * with a call to g_free() when no longer required.
 *
 * Returns: 0 on success, -1 on error
 */</doc>
<def f='codebrowser/crypto/hash.c' l='139' ll='148' type='int qcrypto_hash_base64(QCryptoHashAlgorithm alg, const char * buf, size_t len, char ** base64, Error ** errp)'/>
<use f='codebrowser/io/channel-websock.c' l='268' u='c' c='qio_channel_websock_handshake_send_response'/>
