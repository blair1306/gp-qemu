<dec f='codebrowser/include/qemu/uri.h' l='81' type='char * uri_resolve_relative(const char * URI, const char * base)'/>
<def f='codebrowser/util/uri.c' l='1885' ll='2084' type='char * uri_resolve_relative(const char * uri, const char * base)'/>
<doc f='codebrowser/util/uri.c' l='1853'>/**
 * uri_resolve_relative:
 * @URI:  the URI reference under consideration
 * @base:  the base value
 *
 * Expresses the URI of the reference in terms relative to the
 * base.  Some examples of this operation include:
 *     base = &quot;http://site1.com/docs/book1.html&quot;
 *        URI input                        URI returned
 *     docs/pic1.gif                    pic1.gif
 *     docs/img/pic1.gif                img/pic1.gif
 *     img/pic1.gif                     ../img/pic1.gif
 *     http://site1.com/docs/pic1.gif   pic1.gif
 *     http://site2.com/docs/pic1.gif   http://site2.com/docs/pic1.gif
 *
 *     base = &quot;docs/book1.html&quot;
 *        URI input                        URI returned
 *     docs/pic1.gif                    pic1.gif
 *     docs/img/pic1.gif                img/pic1.gif
 *     img/pic1.gif                     ../img/pic1.gif
 *     http://site1.com/docs/pic1.gif   http://site1.com/docs/pic1.gif
 *
 *
 * Note: if the URI reference is really weird or complicated, it may be
 *       worthwhile to first convert it into a &quot;nice&quot; one by calling
 *       uri_resolve (using &apos;base&apos;) before calling this routine,
 *       since this routine (for reasonable efficiency) assumes URI has
 *       already been through some validation.
 *
 * Returns a new URI string (to be freed by the caller) or NULL in case
 * error.
 */</doc>
