<dec f='codebrowser/include/crypto/afsplit.h' l='128' type='int qcrypto_afsplit_decode(QCryptoHashAlgorithm hash, size_t blocklen, uint32_t stripes, const uint8_t * in, uint8_t * out, Error ** errp)'/>
<def f='codebrowser/crypto/afsplit.c' l='127' ll='159' type='int qcrypto_afsplit_decode(QCryptoHashAlgorithm hash, size_t blocklen, uint32_t stripes, const uint8_t * in, uint8_t * out, Error ** errp)'/>
<doc f='codebrowser/include/crypto/afsplit.h' l='113'>/**
 * qcrypto_afsplit_decode:
 * @hash: the hash algorithm to use for data compression
 * @blocklen: the size of @out in bytes
 * @stripes: the number of times to decrease @in in size
 * @in: the split key to be recombined
 * @out: preallocated buffer to hold the master key
 * @errp: pointer to a NULL-initialized error object
 *
 * Join the data in @in, which is @blocklen * @stripes
 * bytes in size, to form the original small piece of
 * data @out, which is @blocklen bytes in size.
 *
 * Returns: 0 on success, -1 on error;
 */</doc>
<use f='codebrowser/crypto/block-luks.c' l='528' u='c' c='qcrypto_block_luks_load_key'/>
