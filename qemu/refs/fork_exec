<dec f='codebrowser/slirp/misc.h' l='56' type='int fork_exec(struct socket * so, const char * ex, int do_pty)'/>
<def f='codebrowser/slirp/misc.c' l='85' ll='205' type='int fork_exec(struct socket * so, const char * ex, int do_pty)'/>
<doc f='codebrowser/slirp/misc.c' l='74'>/*
 * XXX This is ugly
 * We create and bind a socket, then fork off to another
 * process, which connects to this socket, after which we
 * exec the wanted program.  If something (strange) happens,
 * the accept() call could block us forever.
 *
 * do_pty = 0   Fork/exec inetd style
 * do_pty = 1   Fork/exec using slirp.telnetd
 * do_ptr = 2   Fork/exec using pty
 */</doc>
<use f='codebrowser/slirp/tcp_subr.c' l='965' u='c' c='tcp_ctl'/>
