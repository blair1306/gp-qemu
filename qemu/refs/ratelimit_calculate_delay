<def f='codebrowser/include/qemu/ratelimit.h' l='36' ll='65' type='int64_t ratelimit_calculate_delay(RateLimit * limit, uint64_t n)'/>
<use f='codebrowser/block/backup.c' l='346' u='c' c='yield_and_check'/>
<doc f='codebrowser/include/qemu/ratelimit.h' l='25'>/** Calculate and return delay for next request in ns
 *
 * Record that we sent @n data units (where @n matches the scale chosen
 * during ratelimit_set_speed). If we may send more data units
 * in the current time slice, return 0 (i.e. no delay). Otherwise
 * return the amount of time (in ns) until the start of the next time
 * slice that will permit sending the next chunk of data.
 *
 * Recording sent data units even after exceeding the quota is
 * permitted; the time slice will be extended accordingly.
 */</doc>
<use f='codebrowser/block/commit.c' l='209' u='c' c='commit_run'/>
<use f='codebrowser/block/mirror.c' l='463' u='c' c='mirror_iteration'/>
<use f='codebrowser/block/stream.c' l='190' u='c' c='stream_run'/>
