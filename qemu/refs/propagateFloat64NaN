<def f='codebrowser/fpu/softfloat-specialize.h' l='901' ll='936' type='float64 propagateFloat64NaN(float64 a, float64 b, float_status * status)'/>
<use f='codebrowser/fpu/softfloat.c' l='3732' u='c' c='float64_round_to_int'/>
<use f='codebrowser/fpu/softfloat.c' l='3832' u='c' c='addFloat64Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='3848' u='c' c='addFloat64Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='3864' u='c' c='addFloat64Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='3919' u='c' c='subFloat64Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='3934' u='c' c='subFloat64Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='3954' u='c' c='subFloat64Sigs'/>
<use f='codebrowser/fpu/softfloat.c' l='4045' u='c' c='float64_mul'/>
<use f='codebrowser/fpu/softfloat.c' l='4055' u='c' c='float64_mul'/>
<use f='codebrowser/fpu/softfloat.c' l='4109' u='c' c='float64_div'/>
<use f='codebrowser/fpu/softfloat.c' l='4113' u='c' c='float64_div'/>
<use f='codebrowser/fpu/softfloat.c' l='4122' u='c' c='float64_div'/>
<use f='codebrowser/fpu/softfloat.c' l='4185' u='c' c='float64_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='4192' u='c' c='float64_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='4516' u='c' c='float64_sqrt'/>
<use f='codebrowser/fpu/softfloat.c' l='4577' u='c' c='float64_log2'/>
<use f='codebrowser/fpu/softfloat.c' l='7768' macro='1' u='c'/>
<use f='codebrowser/fpu/softfloat.c' l='7821' u='c' c='float64_scalbn'/>
<doc f='codebrowser/fpu/softfloat-specialize.h' l='895'>/*----------------------------------------------------------------------------
| Takes two double-precision floating-point values `a&apos; and `b&apos;, one of which
| is a NaN, and returns the appropriate NaN result.  If either `a&apos; or `b&apos; is a
| signaling NaN, the invalid exception is raised.
*----------------------------------------------------------------------------*/</doc>
