<dec f='codebrowser/include/hw/loader.h' l='151' type='int load_uimage_as(const char * filename, hwaddr * ep, hwaddr * loadaddr, int * is_linux, uint64_t (*)(void *, uint64_t) translate_fn, void * translate_opaque, AddressSpace * as)'/>
<use f='codebrowser/hw/core/generic-loader.c' l='147' u='c' c='generic_loader_realize'/>
<doc f='codebrowser/include/hw/loader.h' l='137'>/** load_uimage_as:
 * @filename: Path of uimage file
 * @ep: Populated with program entry point. Ignored if NULL.
 * @loadaddr: Populated with the load address. Ignored if NULL.
 * @is_linux: Is set to true if the image loaded is Linux. Ignored if NULL.
 * @translate_fn: optional function to translate load addresses
 * @translate_opaque: opaque data passed to @translate_fn
 * @as: The AddressSpace to load the ELF to. The value of address_space_memory
 *      is used if nothing is supplied here.
 *
 * Loads a u-boot image into memory.
 *
 * Returns the size of the loaded image on success, -1 otherwise.
 */</doc>
<def f='codebrowser/hw/core/loader.c' l='722' ll='729' type='int load_uimage_as(const char * filename, hwaddr * ep, hwaddr * loadaddr, int * is_linux, uint64_t (*)(void *, uint64_t) translate_fn, void * translate_opaque, AddressSpace * as)'/>
