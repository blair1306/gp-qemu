<dec f='codebrowser/include/qemu/coroutine.h' l='186' type='void qemu_co_queue_wait(CoQueue * queue, CoMutex * mutex)'/>
<doc f='codebrowser/include/qemu/coroutine.h' l='181'>/**
 * Adds the current coroutine to the CoQueue and transfers control to the
 * caller of the coroutine.  The mutex is unlocked during the wait and
 * locked again afterwards.
 */</doc>
<use f='codebrowser/block/backup.c' l='62' u='c' c='wait_for_overlapping_requests'/>
<use f='codebrowser/block/io.c' l='547' u='c' c='wait_serialising_requests'/>
<use f='codebrowser/block/io.c' l='2185' u='c' c='bdrv_co_flush'/>
<use f='codebrowser/block/nbd-client.c' l='123' u='c' c='nbd_co_send_request'/>
<use f='codebrowser/block/qcow2-cluster.c' l='1011' u='c' c='handle_dependencies'/>
<use f='codebrowser/block/qed.c' l='1117' u='c' c='qed_aio_write_alloc'/>
<use f='codebrowser/block/sheepdog.c' l='492' u='c' c='wait_for_overlapping_aiocb'/>
<use f='codebrowser/block/throttle-groups.c' l='356' u='c' c='throttle_group_co_io_limits_intercept'/>
<use f='codebrowser/fsdev/qemu-fsdev-throttle.c' l='101' u='c' c='fsdev_co_throttle_request'/>
<def f='codebrowser/util/qemu-coroutine-lock.c' l='43' ll='67' type='void qemu_co_queue_wait(CoQueue * queue, CoMutex * mutex)'/>
<use f='codebrowser/util/qemu-coroutine-lock.c' l='374' u='c' c='qemu_co_rwlock_rdlock'/>
<use f='codebrowser/util/qemu-coroutine-lock.c' l='425' u='c' c='qemu_co_rwlock_wrlock'/>
<use f='codebrowser/util/qemu-coroutine-lock.c' l='444' u='c' c='qemu_co_rwlock_upgrade'/>
