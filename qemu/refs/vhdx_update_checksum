<dec f='codebrowser/block/vhdx.h' l='409' type='uint32_t vhdx_update_checksum(uint8_t * buf, size_t size, int crc_offset)'/>
<use f='codebrowser/block/vhdx-log.c' l='987' u='c' c='vhdx_log_write'/>
<def f='codebrowser/block/vhdx.c' l='144' ll='157' type='uint32_t vhdx_update_checksum(uint8_t * buf, size_t size, int crc_offset)'/>
<use f='codebrowser/block/vhdx.c' l='330' u='c' c='vhdx_write_header'/>
<use f='codebrowser/block/vhdx.c' l='1742' u='c' c='vhdx_create_new_region_table'/>
<doc f='codebrowser/block/vhdx.c' l='134'>/* Calculates new checksum.
 *
 * Zero is substituted during crc calculation for the original crc field
 * crc_offset: byte offset in buf of the buffer crc
 * buf: buffer pointer
 * size: size of buffer (must be &gt; crc_offset+4)
 *
 * Note: The buffer should have all multi-byte data in little-endian format,
 *       and the resulting checksum is in little endian format.
 */</doc>
