<dec f='codebrowser/slirp/slirp.h' l='294' type='int tcp_emu(struct socket * , struct mbuf * )'/>
<use f='codebrowser/slirp/tcp_input.c' l='204' u='c' c='tcp_reass'/>
<use f='codebrowser/slirp/tcp_input.c' l='572' u='c' c='tcp_input'/>
<use f='codebrowser/slirp/tcp_input.c' l='92' u='c' c='tcp_input'/>
<def f='codebrowser/slirp/tcp_subr.c' l='604' ll='936' type='int tcp_emu(struct socket * so, struct mbuf * m)'/>
<doc f='codebrowser/slirp/tcp_subr.c' l='580'>/*
 * Emulate programs that try and connect to us
 * This includes ftp (the data connection is
 * initiated by the server) and IRC (DCC CHAT and
 * DCC SEND) for now
 *
 * NOTE: It&apos;s possible to crash SLiRP by sending it
 * unstandard strings to emulate... if this is a problem,
 * more checks are needed here
 *
 * XXX Assumes the whole command came in one packet
 *
 * XXX Some ftp clients will have their TOS set to
 * LOWDELAY and so Nagel will kick in.  Because of this,
 * we&apos;ll get the first letter, followed by the rest, so
 * we simply scan for ORT instead of PORT...
 * DCC doesn&apos;t have this problem because there&apos;s other stuff
 * in the packet before the DCC command.
 *
 * Return 1 if the mbuf m is still valid and should be
 * sbappend()ed
 *
 * NOTE: if you return 0 you MUST m_free() the mbuf!
 */</doc>
