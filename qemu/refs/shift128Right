<def f='codebrowser/fpu/softfloat-macros.h' l='199' ll='221' type='void shift128Right(uint64_t a0, uint64_t a1, int count, uint64_t * z0Ptr, uint64_t * z1Ptr)'/>
<use f='codebrowser/fpu/softfloat-specialize.h' l='1245' u='c' c='commonNaNToFloat128'/>
<use f='codebrowser/fpu/softfloat.c' l='3709' u='c' c='float64_to_float128'/>
<use f='codebrowser/fpu/softfloat.c' l='5083' u='c' c='floatx80_to_float128'/>
<use f='codebrowser/fpu/softfloat.c' l='5510' u='c' c='floatx80_div'/>
<use f='codebrowser/fpu/softfloat.c' l='5587' u='c' c='floatx80_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='5672' u='c' c='floatx80_sqrt'/>
<use f='codebrowser/fpu/softfloat.c' l='6820' u='c' c='float128_div'/>
<use f='codebrowser/fpu/softfloat.c' l='6918' u='c' c='float128_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='6921' u='c' c='float128_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='6930' u='c' c='float128_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='6931' u='c' c='float128_rem'/>
<doc f='codebrowser/fpu/softfloat-macros.h' l='191'>/*----------------------------------------------------------------------------
| Shifts the 128-bit value formed by concatenating `a0&apos; and `a1&apos; right by the
| number of bits given in `count&apos;.  Any bits shifted off are lost.  The value
| of `count&apos; can be arbitrarily large; in particular, if `count&apos; is greater
| than 128, the result will be 0.  The result is broken into two 64-bit pieces
| which are stored at the locations pointed to by `z0Ptr&apos; and `z1Ptr&apos;.
*----------------------------------------------------------------------------*/</doc>
