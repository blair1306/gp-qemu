<def f='codebrowser/include/hw/acpi/acpi_dev_interface.h' l='53' ll='62'/>
<size>136</size>
<doc f='codebrowser/include/hw/acpi/acpi_dev_interface.h' l='37'>/**
 * AcpiDeviceIfClass:
 *
 * ospm_status: returns status of ACPI device objects, reported
 *              via _OST method if device supports it.
 * send_event: inject a specified event into guest
 * madt_cpu: fills @entry with Interrupt Controller Structure
 *           for CPU indexed by @uid in @apic_ids array,
 *           returned structure types are:
 *           0 - Local APIC, 9 - Local x2APIC, 0xB - GICC
 *
 * Interface is designed for providing unified interface
 * to generic ACPI functionality that could be used without
 * knowledge about internals of actual device that implements
 * ACPI interface.
 */</doc>
<mbr r='AcpiDeviceIfClass::parent_class' o='0' t='InterfaceClass'/>
<mbr r='AcpiDeviceIfClass::ospm_status' o='896' t='void (*)(AcpiDeviceIf *, ACPIOSTInfoList ***)'/>
<mbr r='AcpiDeviceIfClass::send_event' o='960' t='void (*)(AcpiDeviceIf *, AcpiEventStatusBits)'/>
<mbr r='AcpiDeviceIfClass::madt_cpu' o='1024' t='void (*)(AcpiDeviceIf *, int, const CPUArchIdList *, GArray *)'/>
