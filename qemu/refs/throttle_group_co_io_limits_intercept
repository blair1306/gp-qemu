<dec f='codebrowser/include/block/throttle-groups.h' l='43' type='void throttle_group_co_io_limits_intercept(BlockBackend * blk, unsigned int bytes, _Bool is_write)'/>
<use f='codebrowser/block/block-backend.c' l='988' u='c' c='blk_co_preadv'/>
<use f='codebrowser/block/block-backend.c' l='1014' u='c' c='blk_co_pwritev'/>
<def f='codebrowser/block/throttle-groups.c' l='336' ll='370' type='void throttle_group_co_io_limits_intercept(BlockBackend * blk, unsigned int bytes, _Bool is_write)'/>
<doc f='codebrowser/block/throttle-groups.c' l='328'>/* Check if an I/O request needs to be throttled, wait and set a timer
 * if necessary, and schedule the next request using a round robin
 * algorithm.
 *
 * @blk:       the current BlockBackend
 * @bytes:     the number of bytes for this I/O
 * @is_write:  the type of operation (read/write)
 */</doc>
