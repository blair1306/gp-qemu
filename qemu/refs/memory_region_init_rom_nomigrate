<dec f='codebrowser/include/exec/memory.h' l='606' type='void memory_region_init_rom_nomigrate(MemoryRegion * mr, struct Object * owner, const char * name, uint64_t size, Error ** errp)'/>
<doc f='codebrowser/include/exec/memory.h' l='588'>/**
 * memory_region_init_rom_nomigrate: Initialize a ROM memory region.
 *
 * This has the same effect as calling memory_region_init_ram_nomigrate()
 * and then marking the resulting region read-only with
 * memory_region_set_readonly().
 *
 * Note that this function does not do anything to cause the data in the
 * RAM side of the memory region to be migrated; that is the responsibility
 * of the caller.
 *
 * @mr: the #MemoryRegion to be initialized.
 * @owner: the object that tracks the region&apos;s reference count
 * @name: Region name, becomes part of RAMBlock name used in migration stream
 *        must be unique within any device
 * @size: size of the region.
 * @errp: pointer to Error*, to store an error if it happens.
 */</doc>
<def f='codebrowser/memory.c' l='1477' ll='1490' type='void memory_region_init_rom_nomigrate(MemoryRegion * mr, struct Object * owner, const char * name, uint64_t size, Error ** errp)'/>
<use f='codebrowser/memory.c' l='2885' u='c' c='memory_region_init_rom'/>
