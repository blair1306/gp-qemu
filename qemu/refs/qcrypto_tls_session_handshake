<dec f='codebrowser/include/crypto/tlssession.h' l='266' type='int qcrypto_tls_session_handshake(QCryptoTLSSession * sess, Error ** errp)'/>
<doc f='codebrowser/include/crypto/tlssession.h' l='249'>/**
 * qcrypto_tls_session_handshake:
 * @sess: the TLS session object
 * @errp: pointer to a NULL-initialized error object
 *
 * Start, or continue, a TLS handshake sequence. If
 * the underlying data channel is non-blocking, then
 * this method may return control before the handshake
 * is complete. On non-blocking channels the
 * qcrypto_tls_session_get_handshake_status() method
 * should be used to determine whether the handshake
 * has completed, or is waiting to send or receive
 * data. In the latter cases, the caller should setup
 * an event loop watch and call this method again
 * once the underlying data channel is ready to read
 * or write again
 */</doc>
<def f='codebrowser/crypto/tlssession.c' l='563' ll='569' type='int qcrypto_tls_session_handshake(QCryptoTLSSession * sess, Error ** errp)'/>
<use f='codebrowser/io/channel-tls.c' l='154' u='c' c='qio_channel_tls_handshake_task'/>
