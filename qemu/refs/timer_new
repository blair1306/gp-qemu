<def f='codebrowser/include/qemu/timer.h' l='544' ll='548' type='QEMUTimer * timer_new(QEMUClockType type, int scale, QEMUTimerCB * cb, void * opaque)'/>
<use f='codebrowser/include/qemu/timer.h' l='570' u='c' c='timer_new_ns'/>
<use f='codebrowser/include/qemu/timer.h' l='593' u='c' c='timer_new_us'/>
<use f='codebrowser/include/qemu/timer.h' l='616' u='c' c='timer_new_ms'/>
<doc f='codebrowser/include/qemu/timer.h' l='526'>/**
 * timer_new:
 * @type: the clock type to use
 * @scale: the scale value for the timer
 * @cb: the callback to be called when the timer expires
 * @opaque: the opaque pointer to be passed to the callback
 *
 * Create a new timer and associate it with the default
 * timer list for the clock type @type.
 *
 * The default timer list has one special feature: in icount mode,
 * %QEMU_CLOCK_VIRTUAL timers are run in the vCPU thread.  This is
 * not true of other timer lists, which are typically associated
 * with an AioContext---each of them runs its timer callbacks in its own
 * AioContext thread.
 *
 * Returns: a pointer to the timer
 */</doc>
