<dec f='codebrowser/include/io/channel-tls.h' l='126' type='void qio_channel_tls_handshake(QIOChannelTLS * ioc, QIOTaskFunc func, gpointer opaque, GDestroyNotify destroy)'/>
<use f='codebrowser/chardev/char-socket.c' l='669' u='c' c='tcp_chr_tls_init'/>
<doc f='codebrowser/include/io/channel-tls.h' l='113'>/**
 * qio_channel_tls_handshake:
 * @ioc: the TLS channel object
 * @func: the callback to invoke when completed
 * @opaque: opaque data to pass to @func
 * @destroy: optional callback to free @opaque
 *
 * Perform the TLS session handshake. This method
 * will return immediately and the handshake will
 * continue in the background, provided the main
 * loop is running. When the handshake is complete,
 * or fails, the @func callback will be invoked.
 */</doc>
<def f='codebrowser/io/channel-tls.c' l='204' ll='216' type='void qio_channel_tls_handshake(QIOChannelTLS * ioc, QIOTaskFunc func, gpointer opaque, GDestroyNotify destroy)'/>
<use f='codebrowser/migration/tls.c' l='105' u='c' c='migration_tls_channel_process_incoming'/>
<use f='codebrowser/migration/tls.c' l='161' u='c' c='migration_tls_channel_connect'/>
<use f='codebrowser/nbd/client.c' l='583' u='c' c='nbd_receive_starttls'/>
<use f='codebrowser/nbd/server.c' l='567' u='c' c='nbd_negotiate_handle_starttls'/>
<use f='codebrowser/ui/vnc-auth-vencrypt.c' l='126' u='c' c='protocol_client_vencrypt_auth'/>
<use f='codebrowser/ui/vnc-ws.c' l='78' u='c' c='vncws_tls_handshake_io'/>
