<dec f='codebrowser/include/hw/qdev-properties.h' l='130'/>
<doc f='codebrowser/include/hw/qdev-properties.h' l='106'>/**
 * DEFINE_PROP_ARRAY:
 * @_name: name of the array
 * @_state: name of the device state structure type
 * @_field: uint32_t field in @_state to hold the array length
 * @_arrayfield: field in @_state (of type &apos;@_arraytype *&apos;) which
 *               will point to the array
 * @_arrayprop: PropertyInfo defining what property the array elements have
 * @_arraytype: C type of the array elements
 *
 * Define device properties for a variable-length array _name.  A
 * static property &quot;len-arrayname&quot; is defined. When the device creator
 * sets this property to the desired length of array, further dynamic
 * properties &quot;arrayname[0]&quot;, &quot;arrayname[1]&quot;, ...  are defined so the
 * device creator can set the array element values. Setting the
 * &quot;len-arrayname&quot; property more than once is an error.
 *
 * When the array length is set, the @_field member of the device
 * struct is set to the array length, and @_arrayfield is set to point
 * to (zero-initialised) memory allocated for the array.  For a zero
 * length array, @_field will be set to 0 and @_arrayfield to NULL.
 * It is the responsibility of the device deinit code to free the
 * @_arrayfield memory.
 */</doc>
<use f='codebrowser/hw/net/rocker/rocker.c' l='1543' u='c'/>
