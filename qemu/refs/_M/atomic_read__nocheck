<dec f='codebrowser/include/qemu/atomic.h' l='120'/>
<doc f='codebrowser/include/qemu/atomic.h' l='110'>/* Weak atomic operations prevent the compiler moving other
 * loads/stores past the atomic operation load/store. However there is
 * no explicit memory barrier for the processor.
 *
 * The C11 memory model says that variables that are accessed from
 * different threads should at least be done with __ATOMIC_RELAXED
 * primitives or the result is undefined. Generally this has little to
 * no effect on the generated code but not using the atomic primitives
 * will get flagged by sanitizers as a violation.
 */</doc>
<use f='codebrowser/atomic_template.h' l='177' u='c'/>
<use f='codebrowser/atomic_template.h' l='195' u='c'/>
<use f='codebrowser/atomic_template.h' l='177' u='c'/>
<use f='codebrowser/atomic_template.h' l='195' u='c'/>
<use f='codebrowser/atomic_template.h' l='177' u='c'/>
<use f='codebrowser/atomic_template.h' l='195' u='c'/>
<use f='codebrowser/atomic_template.h' l='177' u='c'/>
<use f='codebrowser/atomic_template.h' l='195' u='c'/>
<use f='codebrowser/atomic_template.h' l='177' u='c'/>
<use f='codebrowser/atomic_template.h' l='195' u='c'/>
<use f='codebrowser/atomic_template.h' l='177' u='c'/>
<use f='codebrowser/atomic_template.h' l='195' u='c'/>
<use f='codebrowser/include/qemu/stats64.h' l='40' u='c'/>
<use f='codebrowser/include/qemu/stats64.h' l='50' u='c'/>
<use f='codebrowser/include/qemu/stats64.h' l='58' u='c'/>
<use f='codebrowser/cpus.c' l='248' u='c'/>
<use f='codebrowser/cpus.c' l='268' u='c'/>
