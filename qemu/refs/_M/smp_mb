<dec f='codebrowser/include/qemu/atomic.h' l='75'/>
<doc f='codebrowser/include/qemu/atomic.h' l='66'>/* Manual memory barriers
 *
 *__atomic_thread_fence does not include a compiler barrier; instead,
 * the barrier is part of __atomic_load/__atomic_store&apos;s &quot;volatile-like&quot;
 * semantics. If smp_wmb() is a no-op, absence of the barrier means that
 * the compiler is free to reorder stores on each side of the barrier.
 * Add one here, and similarly in smp_rmb() and smp_read_barrier_depends().
 */</doc>
<use f='codebrowser/include/sysemu/dma.h' l='69' u='c'/>
<use f='codebrowser/accel/tcg/cpu-exec.c' l='598' u='c'/>
<use f='codebrowser/cpus-common.c' l='192' u='c'/>
<use f='codebrowser/cpus-common.c' l='228' u='c'/>
<use f='codebrowser/cpus-common.c' l='269' u='c'/>
<use f='codebrowser/hw/virtio/virtio.c' l='332' u='c'/>
<use f='codebrowser/hw/virtio/virtio.c' l='1618' u='c'/>
<use f='codebrowser/util/async.c' l='340' u='c'/>
<use f='codebrowser/util/bitmap.c' l='217' u='c'/>
<use f='codebrowser/util/bitmap.c' l='283' u='c'/>
<use f='codebrowser/util/qemu-thread-posix.c' l='398' u='c'/>
<use f='codebrowser/util/rcu.c' l='95' u='c'/>
