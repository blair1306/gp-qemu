<dec f='codebrowser/include/fpu/softfloat.h' l='500' type='int32_t float64_to_int32(float64 , float_status * status)'/>
<def f='codebrowser/fpu/softfloat.c' l='3104' ll='3121' type='int32_t float64_to_int32(float64 a, float_status * status)'/>
<use f='codebrowser/fpu/softfloat.c' l='7406' u='c' c='float64_to_int16'/>
<use f='codebrowser/fpu/softfloat.c' l='7426' u='c' c='float64_to_uint16'/>
<doc f='codebrowser/fpu/softfloat.c' l='3094'>/*----------------------------------------------------------------------------
| Returns the result of converting the double-precision floating-point value
| `a&apos; to the 32-bit two&apos;s complement integer format.  The conversion is
| performed according to the IEC/IEEE Standard for Binary Floating-Point
| Arithmetic---which means in particular that the conversion is rounded
| according to the current rounding mode.  If `a&apos; is a NaN, the largest
| positive integer is returned.  Otherwise, if the conversion overflows, the
| largest integer with the same sign as `a&apos; is returned.
*----------------------------------------------------------------------------*/</doc>
<use f='codebrowser/target/i386/ops_sse.h' l='723' u='c' c='helper_cvtpd2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='724' u='c' c='helper_cvtpd2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='736' u='c' c='helper_cvtpd2pi'/>
<use f='codebrowser/target/i386/ops_sse.h' l='737' u='c' c='helper_cvtpd2pi'/>
<use f='codebrowser/target/i386/ops_sse.h' l='747' u='c' c='helper_cvtsd2si'/>
