<def f='codebrowser/fpu/softfloat-macros.h' l='509' ll='530' type='void mul64To128(uint64_t a, uint64_t b, uint64_t * z0Ptr, uint64_t * z1Ptr)'/>
<use f='codebrowser/fpu/softfloat-macros.h' l='551' u='c' c='mul128By64To192'/>
<use f='codebrowser/fpu/softfloat-macros.h' l='552' u='c' c='mul128By64To192'/>
<use f='codebrowser/fpu/softfloat-macros.h' l='582' u='c' c='mul128To256'/>
<use f='codebrowser/fpu/softfloat-macros.h' l='583' u='c' c='mul128To256'/>
<use f='codebrowser/fpu/softfloat-macros.h' l='585' u='c' c='mul128To256'/>
<use f='codebrowser/fpu/softfloat-macros.h' l='587' u='c' c='mul128To256'/>
<use f='codebrowser/fpu/softfloat-macros.h' l='615' u='c' c='estimateDiv128To64'/>
<use f='codebrowser/fpu/softfloat.c' l='4074' u='c' c='float64_mul'/>
<use f='codebrowser/fpu/softfloat.c' l='4150' u='c' c='float64_div'/>
<use f='codebrowser/fpu/softfloat.c' l='4383' u='c' c='float64_muladd'/>
<use f='codebrowser/fpu/softfloat.c' l='4538' u='c' c='float64_sqrt'/>
<use f='codebrowser/fpu/softfloat.c' l='4587' u='c' c='float64_log2'/>
<use f='codebrowser/fpu/softfloat.c' l='5440' u='c' c='floatx80_mul'/>
<use f='codebrowser/fpu/softfloat.c' l='5514' u='c' c='floatx80_div'/>
<use f='codebrowser/fpu/softfloat.c' l='5522' u='c' c='floatx80_div'/>
<use f='codebrowser/fpu/softfloat.c' l='5596' u='c' c='floatx80_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='5606' u='c' c='floatx80_rem'/>
<use f='codebrowser/fpu/softfloat.c' l='5675' u='c' c='floatx80_sqrt'/>
<use f='codebrowser/fpu/softfloat.c' l='5685' u='c' c='floatx80_sqrt'/>
<use f='codebrowser/fpu/softfloat.c' l='5687' u='c' c='floatx80_sqrt'/>
<use f='codebrowser/fpu/softfloat.c' l='6992' u='c' c='float128_sqrt'/>
<use f='codebrowser/fpu/softfloat.c' l='7002' u='c' c='float128_sqrt'/>
<use f='codebrowser/fpu/softfloat.c' l='7004' u='c' c='float128_sqrt'/>
<doc f='codebrowser/fpu/softfloat-macros.h' l='503'>/*----------------------------------------------------------------------------
| Multiplies `a&apos; by `b&apos; to obtain a 128-bit product.  The product is broken
| into two 64-bit pieces which are stored at the locations pointed to by
| `z0Ptr&apos; and `z1Ptr&apos;.
*----------------------------------------------------------------------------*/</doc>
