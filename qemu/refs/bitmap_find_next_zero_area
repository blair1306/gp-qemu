<dec f='codebrowser/include/qemu/bitmap.h' l='225' type='unsigned long bitmap_find_next_zero_area(unsigned long * map, unsigned long size, unsigned long start, unsigned long nr, unsigned long align_mask)'/>
<def f='codebrowser/util/bitmap.c' l='315' ll='338' type='unsigned long bitmap_find_next_zero_area(unsigned long * map, unsigned long size, unsigned long start, unsigned long nr, unsigned long align_mask)'/>
<doc f='codebrowser/util/bitmap.c' l='303'>/**
 * bitmap_find_next_zero_area - find a contiguous aligned zero area
 * @map: The address to base the search on
 * @size: The bitmap size in bits
 * @start: The bitnumber to start searching at
 * @nr: The number of zeroed bits we&apos;re looking for
 * @align_mask: Alignment mask for zero area
 *
 * The @align_mask should be one less than a power of 2; the effect is that
 * the bit offset of all zero areas this function finds is multiples of that
 * power of 2. A @align_mask of 0 means no alignment is required.
 */</doc>
