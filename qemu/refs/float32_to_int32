<dec f='codebrowser/include/fpu/softfloat.h' l='388' type='int32_t float32_to_int32(float32 , float_status * status)'/>
<def f='codebrowser/fpu/softfloat.c' l='1562' ll='1582' type='int32_t float32_to_int32(float32 a, float_status * status)'/>
<use f='codebrowser/fpu/softfloat.c' l='7313' u='c' c='float32_to_int16'/>
<use f='codebrowser/fpu/softfloat.c' l='7333' u='c' c='float32_to_uint16'/>
<doc f='codebrowser/fpu/softfloat.c' l='1552'>/*----------------------------------------------------------------------------
| Returns the result of converting the single-precision floating-point value
| `a&apos; to the 32-bit two&apos;s complement integer format.  The conversion is
| performed according to the IEC/IEEE Standard for Binary Floating-Point
| Arithmetic---which means in particular that the conversion is rounded
| according to the current rounding mode.  If `a&apos; is a NaN, the largest
| positive integer is returned.  Otherwise, if the conversion overflows, the
| largest integer with the same sign as `a&apos; is returned.
*----------------------------------------------------------------------------*/</doc>
<use f='codebrowser/target/i386/ops_sse.h' l='715' u='c' c='helper_cvtps2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='716' u='c' c='helper_cvtps2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='717' u='c' c='helper_cvtps2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='718' u='c' c='helper_cvtps2dq'/>
<use f='codebrowser/target/i386/ops_sse.h' l='730' u='c' c='helper_cvtps2pi'/>
<use f='codebrowser/target/i386/ops_sse.h' l='731' u='c' c='helper_cvtps2pi'/>
<use f='codebrowser/target/i386/ops_sse.h' l='742' u='c' c='helper_cvtss2si'/>
