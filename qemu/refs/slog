<dec f='codebrowser/qga/guest-agent-core.h' l='37' type='void slog(const gchar * fmt)'/>
<use f='codebrowser/qga/commands-posix.c' l='83' u='c' c='qmp_guest_shutdown'/>
<use f='codebrowser/qga/commands-posix.c' l='403' u='c' c='qmp_guest_file_open'/>
<use f='codebrowser/qga/commands-posix.c' l='421' u='c' c='qmp_guest_file_open'/>
<use f='codebrowser/qga/commands-posix.c' l='430' u='c' c='qmp_guest_file_close'/>
<use f='codebrowser/qga/commands-posix.c' l='482' u='c' c='qmp_guest_file_read'/>
<use f='codebrowser/qga/commands-posix.c' l='542' u='c' c='qmp_guest_file_write'/>
<use f='codebrowser/qga/commands-posix.c' l='653' u='c' c='dev_major_minor'/>
<use f='codebrowser/qga/commands-posix.c' l='1146' u='c' c='execute_fsfreeze_hook'/>
<use f='codebrowser/qga/commands-posix.c' l='1211' u='c' c='qmp_guest_fsfreeze_freeze_list'/>
<use f='codebrowser/qga/commands-posix.c' l='1349' u='c' c='guest_fsfreeze_cleanup'/>
<use f='codebrowser/qga/commands-posix.c' l='1374' u='c' c='qmp_guest_fstrim'/>
<use f='codebrowser/qga/commands-posix.c' l='2653' u='c' c='ga_parse_osrelease'/>
<use f='codebrowser/qga/commands-posix.c' l='2658' u='c' c='ga_parse_osrelease'/>
<use f='codebrowser/qga/commands-posix.c' l='2665' u='c' c='ga_parse_osrelease'/>
<def f='codebrowser/qga/commands.c' l='31' ll='38' type='void slog(const gchar * fmt)'/>
<use f='codebrowser/qga/commands.c' l='53' u='c' c='qmp_guest_ping'/>
<use f='codebrowser/qga/commands.c' l='150' u='c' c='qmp_guest_exec_status'/>
<use f='codebrowser/qga/commands.c' l='253' u='c' c='guest_exec_get_args'/>
<use f='codebrowser/qga/commands.c' l='283' u='c' c='guest_exec_task_setup'/>
<doc f='codebrowser/qga/commands.c' l='26'>/* Note: in some situations, like with the fsfreeze, logging may be
 * temporarilly disabled. if it is necessary that a command be able
 * to log for accounting purposes, check ga_logging_enabled() beforehand,
 * and use the QERR_QGA_LOGGING_DISABLED to generate an error
 */</doc>
