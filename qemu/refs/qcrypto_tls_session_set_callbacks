<dec f='codebrowser/include/crypto/tlssession.h' l='203' type='void qcrypto_tls_session_set_callbacks(QCryptoTLSSession * sess, QCryptoTLSSessionWriteFunc writeFunc, QCryptoTLSSessionReadFunc readFunc, void * opaque)'/>
<doc f='codebrowser/include/crypto/tlssession.h' l='185'>/**
 * qcrypto_tls_session_set_callbacks:
 * @sess: the TLS session object
 * @writeFunc: callback for sending data
 * @readFunc: callback to receiving data
 * @opaque: data to pass to callbacks
 *
 * Sets the callback functions that are to be used for sending
 * and receiving data on the underlying data channel. Typically
 * the callbacks to write/read to/from a TCP socket, but there
 * is no assumption made about the type of channel used.
 *
 * The @writeFunc callback will be passed the encrypted
 * data to send to the remote peer.
 *
 * The @readFunc callback will be passed a pointer to fill
 * with encrypted data received from the remote peer
 */</doc>
<def f='codebrowser/crypto/tlssession.c' l='533' ll='540' type='void qcrypto_tls_session_set_callbacks(QCryptoTLSSession * sess, QCryptoTLSSessionWriteFunc writeFunc, QCryptoTLSSessionReadFunc readFunc, void * opaque)'/>
<use f='codebrowser/io/channel-tls.c' l='87' u='c' c='qio_channel_tls_new_server'/>
<use f='codebrowser/io/channel-tls.c' l='129' u='c' c='qio_channel_tls_new_client'/>
