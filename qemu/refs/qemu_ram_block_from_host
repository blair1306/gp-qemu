<dec f='codebrowser/include/exec/cpu-common.h' l='69' type='RAMBlock * qemu_ram_block_from_host(void * ptr, _Bool round_offset, ram_addr_t * offset)'/>
<def f='codebrowser/exec.c' l='2251' ll='2295' type='RAMBlock * qemu_ram_block_from_host(void * ptr, _Bool round_offset, ram_addr_t * offset)'/>
<use f='codebrowser/exec.c' l='2324' u='c' c='qemu_ram_addr_from_host'/>
<doc f='codebrowser/exec.c' l='2234'>/*
 * Translates a host ptr back to a RAMBlock, a ram_addr and an offset
 * in that RAMBlock.
 *
 * ptr: Host pointer to look up
 * round_offset: If true round the result offset down to a page boundary
 * *ram_addr: set to result ram_addr
 * *offset: set to result offset within the RAMBlock
 *
 * Returns: RAMBlock (or NULL if not found)
 *
 * By the time this function returns, the returned pointer is not protected
 * by RCU anymore.  If the caller is not within an RCU critical section and
 * does not hold the iothread lock, it must have other means of protecting the
 * pointer, such as a reference to the region that includes the incoming
 * ram_addr_t.
 */</doc>
<use f='codebrowser/memory.c' l='1909' u='c' c='memory_region_from_host'/>
<use f='codebrowser/migration/postcopy-ram.c' l='480' u='c' c='postcopy_ram_fault_thread'/>
