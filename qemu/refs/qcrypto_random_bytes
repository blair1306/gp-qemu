<dec f='codebrowser/include/crypto/random.h' l='39' type='int qcrypto_random_bytes(uint8_t * buf, size_t buflen, Error ** errp)'/>
<use f='codebrowser/crypto/afsplit.c' l='102' u='c' c='qcrypto_afsplit_encode'/>
<doc f='codebrowser/include/crypto/random.h' l='28'>/**
 * qcrypto_random_bytes:
 * @buf: the buffer to fill
 * @buflen: length of @buf in bytes
 * @errp: pointer to a NULL-initialized error object
 *
 * Fill @buf with @buflen bytes of cryptographically strong
 * random data
 *
 * Returns 0 on success, -1 on error
 */</doc>
<use f='codebrowser/crypto/block-luks.c' l='1023' u='c' c='qcrypto_block_luks_create'/>
<use f='codebrowser/crypto/block-luks.c' l='1031' u='c' c='qcrypto_block_luks_create'/>
<use f='codebrowser/crypto/block-luks.c' l='1135' u='c' c='qcrypto_block_luks_create'/>
<def f='codebrowser/crypto/random-platform.c' l='58' ll='93' type='int qcrypto_random_bytes(uint8_t * buf, size_t buflen, Error ** errp)'/>
