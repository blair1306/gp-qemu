<dec f='codebrowser/include/block/block.h' l='434' type='int bdrv_is_allocated_above(BlockDriverState * top, BlockDriverState * base, int64_t offset, int64_t bytes, int64_t * pnum)'/>
<use f='codebrowser/block/commit.c' l='187' u='c' c='commit_run'/>
<def f='codebrowser/block/io.c' l='1970' ll='2006' type='int bdrv_is_allocated_above(BlockDriverState * top, BlockDriverState * base, int64_t offset, int64_t bytes, int64_t * pnum)'/>
<doc f='codebrowser/block/io.c' l='1954'>/*
 * Given an image chain: ... -&gt; [BASE] -&gt; [INTER1] -&gt; [INTER2] -&gt; [TOP]
 *
 * Return true if (a prefix of) the given range is allocated in any image
 * between BASE and TOP (inclusive).  BASE can be NULL to check if the given
 * offset is allocated in any image of the chain.  Return false otherwise,
 * or negative errno on failure.
 *
 * &apos;pnum&apos; is set to the number of bytes (including and immediately
 * following the specified offset) that are known to be in the same
 * allocated/unallocated state.  Note that a subsequent call starting
 * at &apos;offset + *pnum&apos; may return the same allocation status (in other
 * words, the result is not necessarily the maximum possible range);
 * but &apos;pnum&apos; will only be 0 when end of file is reached.
 *
 */</doc>
<use f='codebrowser/block/mirror.c' l='674' u='c' c='mirror_dirty_init'/>
<use f='codebrowser/block/replication.c' l='289' u='c' c='replication_co_writev'/>
<use f='codebrowser/block/stream.c' l='157' u='c' c='stream_run'/>
<use f='codebrowser/qemu-img.c' l='1496' u='c' c='img_compare'/>
