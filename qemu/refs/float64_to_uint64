<dec f='codebrowser/include/fpu/softfloat.h' l='506' type='uint64_t float64_to_uint64(float64 a, float_status * status)'/>
<use f='codebrowser/fpu/softfloat.c' l='7372' u='c' c='float64_to_uint32'/>
<def f='codebrowser/fpu/softfloat.c' l='7471' ll='7505' type='uint64_t float64_to_uint64(float64 a, float_status * status)'/>
<use f='codebrowser/fpu/softfloat.c' l='7511' u='c' c='float64_to_uint64_round_to_zero'/>
<doc f='codebrowser/fpu/softfloat.c' l='7459'>/*----------------------------------------------------------------------------
| Returns the result of converting the double-precision floating-point value
| `a&apos; to the 64-bit unsigned integer format.  The conversion is
| performed according to the IEC/IEEE Standard for Binary Floating-Point
| Arithmetic---which means in particular that the conversion is rounded
| according to the current rounding mode.  If `a&apos; is a NaN, the largest
| positive integer is returned.  If the conversion overflows, the
| largest unsigned integer is returned.  If &apos;a&apos; is negative, the value is
| rounded and zero is returned; negative values that do not round to zero
| will raise the inexact exception.
*----------------------------------------------------------------------------*/</doc>
