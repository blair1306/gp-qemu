<dec f='codebrowser/include/exec/memory.h' l='1611' type='AddressSpace * address_space_init_shareable(MemoryRegion * root, const char * name)'/>
<doc f='codebrowser/include/exec/memory.h' l='1597'>/**
 * address_space_init_shareable: return an address space for a memory region,
 *                               creating it if it does not already exist
 *
 * @root: a #MemoryRegion that routes addresses for the address space
 * @name: an address space name.  The name is only used for debugging
 *        output.
 *
 * This function will return a pointer to an existing AddressSpace
 * which was initialized with the specified MemoryRegion, or it will
 * create and initialize one if it does not already exist. The ASes
 * are reference-counted, so the memory will be freed automatically
 * when the AddressSpace is destroyed via address_space_destroy.
 */</doc>
<use f='codebrowser/cpus.c' l='1767' u='c' c='qemu_init_vcpu'/>
<def f='codebrowser/memory.c' l='2611' ll='2626' type='AddressSpace * address_space_init_shareable(MemoryRegion * root, const char * name)'/>
<use f='codebrowser/target/i386/cpu.c' l='3705' u='c' c='x86_cpu_realizefn'/>
