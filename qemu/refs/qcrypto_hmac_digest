<dec f='codebrowser/include/crypto/hmac.h' l='161' type='int qcrypto_hmac_digest(QCryptoHmac * hmac, const char * buf, size_t len, char ** digest, Error ** errp)'/>
<doc f='codebrowser/include/crypto/hmac.h' l='144'>/**
 * qcrypto_hmac_digest:
 * @hmac: the hmac object
 * @buf: the memory region to hmac
 * @len: the length of @buf
 * @digest: pointer to hold output hmac
 * @errp: pointer to a NULL-initialized error object
 *
 * Computes the hmac across all the memory region
 * @buf of length @len. The @digest pointer will be
 * filled with the printable hex digest of the computed
 * hmac, which will be terminated by &apos;\0&apos;. The
 * memory pointer in @digest must be released
 * with a call to g_free() when no longer required.
 *
 * Returns: 0 on success, -1 on error
 */</doc>
<def f='codebrowser/crypto/hmac.c' l='73' ll='85' type='int qcrypto_hmac_digest(QCryptoHmac * hmac, const char * buf, size_t len, char ** digest, Error ** errp)'/>
