<dec f='codebrowser/include/qemu/fifo8.h' l='95' type='const uint8_t * fifo8_pop_buf(Fifo8 * fifo, uint32_t max, uint32_t * num)'/>
<doc f='codebrowser/include/qemu/fifo8.h' l='71'>/**
 * fifo8_pop_buf:
 * @fifo: FIFO to pop from
 * @max: maximum number of bytes to pop
 * @num: actual number of returned bytes
 *
 * Pop a number of elements from the FIFO up to a maximum of max. The buffer
 * containing the popped data is returned. This buffer points directly into
 * the FIFO backing store and data is invalidated once any of the fifo8_* APIs
 * are called on the FIFO.
 *
 * The function may return fewer bytes than requested when the data wraps
 * around in the ring buffer; in this case only a contiguous part of the data
 * is returned.
 *
 * The number of valid bytes returned is populated in *num; will always return
 * at least 1 byte. max must not be 0 or greater than the number of bytes in
 * the FIFO.
 *
 * Clients are responsible for checking the availability of requested data
 * using fifo8_num_used().
 *
 * Returns: A pointer to popped data.
 */</doc>
<def f='codebrowser/util/fifo8.c' l='75' ll='88' type='const uint8_t * fifo8_pop_buf(Fifo8 * fifo, uint32_t max, uint32_t * num)'/>
