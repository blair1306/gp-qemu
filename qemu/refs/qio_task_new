<dec f='codebrowser/include/io/task.h' l='219' type='QIOTask * qio_task_new(Object * source, QIOTaskFunc func, gpointer opaque, GDestroyNotify destroy)'/>
<doc f='codebrowser/include/io/task.h' l='200'>/**
 * qio_task_new:
 * @source: the object on which the operation is invoked
 * @func: the callback to invoke when the task completes
 * @opaque: opaque data to pass to @func when invoked
 * @destroy: optional callback to free @opaque
 *
 * Creates a new task struct to track completion of a
 * background operation running on the object @source.
 * When the operation completes or fails, the callback
 * @func will be invoked. The callback can access the
 * &apos;err&apos; attribute in the task object to determine if
 * the operation was successful or not.
 *
 * The returned task will be released when qio_task_complete()
 * is invoked.
 *
 * Returns: the task struct
 */</doc>
<use f='codebrowser/io/channel-socket.c' l='178' u='c' c='qio_channel_socket_connect_async'/>
<use f='codebrowser/io/channel-socket.c' l='237' u='c' c='qio_channel_socket_listen_async'/>
<use f='codebrowser/io/channel-socket.c' l='312' u='c' c='qio_channel_socket_dgram_async'/>
<use f='codebrowser/io/channel-tls.c' l='211' u='c' c='qio_channel_tls_handshake'/>
<use f='codebrowser/io/channel-websock.c' l='668' u='c' c='qio_channel_websock_handshake'/>
<use f='codebrowser/io/dns-resolver.c' l='231' u='c' c='qio_dns_resolver_lookup_async'/>
<def f='codebrowser/io/task.c' l='38' ll='56' type='QIOTask * qio_task_new(Object * source, QIOTaskFunc func, gpointer opaque, GDestroyNotify destroy)'/>
