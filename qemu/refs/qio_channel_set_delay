<dec f='codebrowser/include/io/channel.h' l='408' type='void qio_channel_set_delay(QIOChannel * ioc, _Bool enabled)'/>
<doc f='codebrowser/include/io/channel.h' l='383'>/**
 * qio_channel_set_delay:
 * @ioc: the channel object
 * @enabled: the new flag state
 *
 * Controls whether the underlying transport is
 * permitted to delay writes in order to merge
 * small packets. If @enabled is true, then the
 * writes may be delayed in order to opportunistically
 * merge small packets into larger ones. If @enabled
 * is false, writes are dispatched immediately with
 * no delay.
 *
 * When @enabled is false, applications may wish to
 * use the qio_channel_set_cork() method to explicitly
 * control write merging.
 *
 * On channels which are backed by a socket, this
 * API corresponds to the inverse of TCP_NODELAY flag,
 * controlling whether the Nagle algorithm is active.
 *
 * This setting is merely a hint, so implementations are
 * free to ignore this without it being considered an
 * error.
 */</doc>
<use f='codebrowser/block/nbd.c' l='326' u='c' c='nbd_establish_connection'/>
<use f='codebrowser/chardev/char-socket.c' l='705' u='c' c='tcp_chr_new_client'/>
<use f='codebrowser/io/channel-tls.c' l='320' u='c' c='qio_channel_tls_set_delay'/>
<use f='codebrowser/io/channel-websock.c' l='963' u='c' c='qio_channel_websock_set_delay'/>
<def f='codebrowser/io/channel.c' l='203' ll='211' type='void qio_channel_set_delay(QIOChannel * ioc, _Bool enabled)'/>
<use f='codebrowser/ui/vnc.c' l='3015' u='c' c='vnc_listen_io'/>
