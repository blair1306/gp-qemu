<dec f='codebrowser/util/hbitmap.c' l='80' type='int'/>
<use f='codebrowser/util/hbitmap.c' l='170' u='r' c='hbitmap_iter_init'/>
<use f='codebrowser/util/hbitmap.c' l='173' u='r' c='hbitmap_iter_init'/>
<use f='codebrowser/util/hbitmap.c' l='198' u='r' c='hbitmap_granularity'/>
<use f='codebrowser/util/hbitmap.c' l='203' u='r' c='hbitmap_count'/>
<use f='codebrowser/util/hbitmap.c' l='217' u='r' c='hb_count_between'/>
<use f='codebrowser/util/hbitmap.c' l='296' u='r' c='hbitmap_set'/>
<use f='codebrowser/util/hbitmap.c' l='296' u='r' c='hbitmap_set'/>
<use f='codebrowser/util/hbitmap.c' l='298' u='r' c='hbitmap_set'/>
<use f='codebrowser/util/hbitmap.c' l='299' u='r' c='hbitmap_set'/>
<use f='codebrowser/util/hbitmap.c' l='386' u='r' c='hbitmap_reset'/>
<use f='codebrowser/util/hbitmap.c' l='386' u='r' c='hbitmap_reset'/>
<use f='codebrowser/util/hbitmap.c' l='388' u='r' c='hbitmap_reset'/>
<use f='codebrowser/util/hbitmap.c' l='389' u='r' c='hbitmap_reset'/>
<use f='codebrowser/util/hbitmap.c' l='427' u='r' c='hbitmap_is_serializable'/>
<use f='codebrowser/util/hbitmap.c' l='433' u='r' c='hbitmap_get'/>
<use f='codebrowser/util/hbitmap.c' l='446' u='r' c='hbitmap_serialization_granularity'/>
<use f='codebrowser/util/hbitmap.c' l='460' u='r' c='serialization_chunk'/>
<use f='codebrowser/util/hbitmap.c' l='461' u='r' c='serialization_chunk'/>
<use f='codebrowser/util/hbitmap.c' l='465' u='r' c='serialization_chunk'/>
<use f='codebrowser/util/hbitmap.c' l='466' u='r' c='serialization_chunk'/>
<use f='codebrowser/util/hbitmap.c' l='616' u='w' c='hbitmap_alloc'/>
<use f='codebrowser/util/hbitmap.c' l='640' u='r' c='hbitmap_truncate'/>
<use f='codebrowser/util/hbitmap.c' l='640' u='r' c='hbitmap_truncate'/>
<use f='codebrowser/util/hbitmap.c' l='656' u='r' c='hbitmap_truncate'/>
<use f='codebrowser/util/hbitmap.c' l='656' u='r' c='hbitmap_truncate'/>
<use f='codebrowser/util/hbitmap.c' l='657' u='r' c='hbitmap_truncate'/>
<use f='codebrowser/util/hbitmap.c' l='678' u='r' c='hbitmap_truncate'/>
<use f='codebrowser/util/hbitmap.c' l='695' u='r' c='hbitmap_merge'/>
<use f='codebrowser/util/hbitmap.c' l='695' u='r' c='hbitmap_merge'/>
<use f='codebrowser/util/hbitmap.c' l='720' u='r' c='hbitmap_create_meta'/>
<use f='codebrowser/util/hbitmap.c' l='721' u='r' c='hbitmap_create_meta'/>
<offset>128</offset>
<doc f='codebrowser/util/hbitmap.c' l='62'>/* A scaling factor.  Given a granularity of G, each bit in the bitmap will
     * will actually represent a group of 2^G elements.  Each operation on a
     * range of bits first rounds the bits to determine which group they land
     * in, and then affect the entire page; iteration will only visit the first
     * bit of each group.  Here is an example of operations in a size-16,
     * granularity-1 HBitmap:
     *
     *    initial state            00000000
     *    set(start=0, count=9)    11111000 (iter: 0, 2, 4, 6, 8)
     *    reset(start=1, count=3)  00111000 (iter: 4, 6, 8)
     *    set(start=9, count=2)    00111100 (iter: 4, 6, 8, 10)
     *    reset(start=5, count=5)  00000000
     *
     * From an implementation point of view, when setting or resetting bits,
     * the bitmap will scale bit numbers right by this amount of bits.  When
     * iterating, the bitmap will scale bit numbers left by this amount of
     * bits.
     */</doc>
