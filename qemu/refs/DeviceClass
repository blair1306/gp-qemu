<def f='codebrowser/include/hw/qdev-core.h' l='95' ll='131'/>
<size>192</size>
<doc f='codebrowser/include/hw/qdev-core.h' l='43'>/**
 * DeviceClass:
 * @props: Properties accessing state fields.
 * @realize: Callback function invoked when the #DeviceState:realized
 * property is changed to %true. The default invokes @init if not %NULL.
 * @unrealize: Callback function invoked when the #DeviceState:realized
 * property is changed to %false.
 * @init: Callback function invoked when the #DeviceState::realized property
 * is changed to %true. Deprecated, new types inheriting directly from
 * TYPE_DEVICE should use @realize instead, new leaf types should consult
 * their respective parent type.
 * @hotpluggable: indicates if #DeviceClass is hotpluggable, available
 * as readonly &quot;hotpluggable&quot; property of #DeviceState instance
 *
 * # Realization #
 * Devices are constructed in two stages,
 * 1) object instantiation via object_initialize() and
 * 2) device realization via #DeviceState:realized property.
 * The former may not fail (it might assert or exit), the latter may return
 * error information to the caller and must be re-entrant.
 * Trivial field initializations should go into #TypeInfo.instance_init.
 * Operations depending on @props static properties should go into @realize.
 * After successful realization, setting static properties will fail.
 *
 * As an interim step, the #DeviceState:realized property can also be
 * set with qdev_init_nofail().
 * In the future, devices will propagate this state change to their children
 * and along busses they expose.
 * The point in time will be deferred to machine creation, so that values
 * set in @realize will not be introspectable beforehand. Therefore devices
 * must not create children during @realize; they should initialize them via
 * object_initialize() in their own #TypeInfo.instance_init and forward the
 * realization events appropriately.
 *
 * The @init callback is considered private to a particular bus implementation
 * (immediate abstract child types of TYPE_DEVICE). Derived leaf types set an
 * &quot;init&quot; callback on their parent class instead.
 *
 * Any type may override the @realize and/or @unrealize callbacks but needs
 * to call the parent type&apos;s implementation if keeping their functionality
 * is desired. Refer to QOM documentation for further discussion and examples.
 *
 * &lt;note&gt;
 *   &lt;para&gt;
 * If a type derived directly from TYPE_DEVICE implements @realize, it does
 * not need to implement @init and therefore does not need to store and call
 * #DeviceClass&apos; default @realize callback.
 * For other types consult the documentation and implementation of the
 * respective parent types.
 *   &lt;/para&gt;
 * &lt;/note&gt;
 */</doc>
<mbr r='DeviceClass::parent_class' o='0' t='ObjectClass'/>
<mbr r='DeviceClass::categories' o='768' t='unsigned long [1]'/>
<mbr r='DeviceClass::fw_name' o='832' t='const char *'/>
<mbr r='DeviceClass::desc' o='896' t='const char *'/>
<mbr r='DeviceClass::props' o='960' t='Property *'/>
<mbr r='DeviceClass::user_creatable' o='1024' t='_Bool'/>
<mbr r='DeviceClass::hotpluggable' o='1032' t='_Bool'/>
<mbr r='DeviceClass::reset' o='1088' t='void (*)(DeviceState *)'/>
<mbr r='DeviceClass::realize' o='1152' t='DeviceRealize'/>
<mbr r='DeviceClass::unrealize' o='1216' t='DeviceUnrealize'/>
<mbr r='DeviceClass::vmsd' o='1280' t='const struct VMStateDescription *'/>
<mbr r='DeviceClass::init' o='1344' t='qdev_initfn'/>
<mbr r='DeviceClass::exit' o='1408' t='qdev_event'/>
<mbr r='DeviceClass::bus_type' o='1472' t='const char *'/>
