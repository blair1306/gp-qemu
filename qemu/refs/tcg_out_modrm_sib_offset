<def f='codebrowser/tcg/i386/tcg-target.inc.c' l='541' ll='621' type='void tcg_out_modrm_sib_offset(TCGContext * s, int opc, int r, int rm, int index, int shift, intptr_t offset)'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='627' u='c' c='tcg_out_modrm_offset'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1311' u='c' c='tcg_out_tlb_load'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1556' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1560' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1564' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1573' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1576' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1582' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1587' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1595' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1602' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1609' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1621' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1623' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1626' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1628' u='c' c='tcg_out_qemu_ld_direct'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='1973' u='c' c='tcg_out_op'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='2035' u='c' c='tcg_out_op'/>
<use f='codebrowser/tcg/i386/tcg-target.inc.c' l='2038' u='c' c='tcg_out_op'/>
<doc f='codebrowser/tcg/i386/tcg-target.inc.c' l='536'>/* Output an opcode with a full &quot;rm + (index&lt;&lt;shift) + offset&quot; address mode.
   We handle either RM and INDEX missing with a negative value.  In 64-bit
   mode for absolute addresses, ~RM is the size of the immediate operand
   that will follow the instruction.  */</doc>
