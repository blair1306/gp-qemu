<def f='codebrowser/include/qemu/timer.h' l='516' ll='524' type='QEMUTimer * timer_new_tl(QEMUTimerList * timer_list, int scale, QEMUTimerCB * cb, void * opaque)'/>
<use f='codebrowser/include/qemu/timer.h' l='547' u='c' c='timer_new'/>
<use f='codebrowser/include/block/aio.h' l='407' u='c' c='aio_timer_new'/>
<doc f='codebrowser/include/qemu/timer.h' l='501'>/**
 * timer_new_tl:
 * @timer_list: the timer list to attach the timer to
 * @scale: the scale value for the timer
 * @cb: the callback to be called when the timer expires
 * @opaque: the opaque pointer to be passed to the callback
 *
 * Create a new timer and associate it with @timer_list.
 * The memory is allocated by the function.
 *
 * This is not the preferred interface unless you know you
 * are going to call timer_free. Use timer_init instead.
 *
 * Returns: a pointer to the timer
 */</doc>
