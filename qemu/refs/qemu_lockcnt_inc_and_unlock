<dec f='codebrowser/include/qemu/thread.h' l='201' type='void qemu_lockcnt_inc_and_unlock(QemuLockCnt * lockcnt)'/>
<doc f='codebrowser/include/qemu/thread.h' l='190'>/**
 * qemu_lockcnt_inc_and_unlock: combined unlock/increment on a QemuLockCnt.
 * @lockcnt: the lockcnt to operate on.
 *
 * This is the same as
 *
 *     qemu_lockcnt_unlock(lockcnt);
 *     qemu_lockcnt_inc(lockcnt);
 *
 * but more efficient.
 */</doc>
<use f='codebrowser/util/aio-posix.c' l='418' u='c' c='aio_dispatch_handlers'/>
<use f='codebrowser/util/async.c' l='141' u='c' c='aio_bh_poll'/>
<def f='codebrowser/util/lockcnt.c' l='254' ll='270' type='void qemu_lockcnt_inc_and_unlock(QemuLockCnt * lockcnt)'/>
