<dec f='codebrowser/include/exec/memory.h' l='1297' type='void memory_region_add_eventfd(MemoryRegion * mr, hwaddr addr, unsigned int size, _Bool match_data, uint64_t data, EventNotifier * e)'/>
<doc f='codebrowser/include/exec/memory.h' l='1281'>/**
 * memory_region_add_eventfd: Request an eventfd to be triggered when a word
 *                            is written to a location.
 *
 * Marks a word in an IO region (initialized with memory_region_init_io())
 * as a trigger for an eventfd event.  The I/O callback will not be called.
 * The caller must be prepared to handle failure (that is, take the required
 * action if the callback _is_ called).
 *
 * @mr: the memory region being updated.
 * @addr: the address within @mr that is to be monitored
 * @size: the size of the access to trigger the eventfd
 * @match_data: whether to match against @data, instead of just @addr
 * @data: the data to match against the guest write
 * @fd: the eventfd to be triggered when @addr, @size, and @data all match.
 **/</doc>
<use f='codebrowser/hw/misc/ivshmem.c' l='383' u='c' c='ivshmem_add_eventfd'/>
<use f='codebrowser/hw/misc/pci-testdev.c' l='108' u='c' c='pci_testdev_start'/>
<use f='codebrowser/hw/virtio/virtio-mmio.c' l='86' u='c' c='virtio_mmio_ioeventfd_assign'/>
<use f='codebrowser/hw/virtio/virtio-pci.c' l='304' u='c' c='virtio_pci_ioeventfd_assign'/>
<use f='codebrowser/hw/virtio/virtio-pci.c' l='307' u='c' c='virtio_pci_ioeventfd_assign'/>
<use f='codebrowser/hw/virtio/virtio-pci.c' l='311' u='c' c='virtio_pci_ioeventfd_assign'/>
<use f='codebrowser/hw/virtio/virtio-pci.c' l='316' u='c' c='virtio_pci_ioeventfd_assign'/>
<def f='codebrowser/memory.c' l='2038' ll='2078' type='void memory_region_add_eventfd(MemoryRegion * mr, hwaddr addr, unsigned int size, _Bool match_data, uint64_t data, EventNotifier * e)'/>
