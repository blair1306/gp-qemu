<dec f='codebrowser/include/crypto/hmac.h' l='138' type='int qcrypto_hmac_digestv(QCryptoHmac * hmac, const struct iovec * iov, size_t niov, char ** digest, Error ** errp)'/>
<doc f='codebrowser/include/crypto/hmac.h' l='120'>/**
 * qcrypto_hmac_digestv:
 * @hmac: the hmac object
 * @iov: the array of memory regions to hmac
 * @niov: the length of @iov
 * @digest: pointer to hold output hmac
 * @errp: pointer to a NULL-initialized error object
 *
 * Computes the hmac across all the memory regions
 * present in @iov. The @digest pointer will be
 * filled with the printable hex digest of the computed
 * hmac, which will be terminated by &apos;\0&apos;. The
 * memory pointer in @digest must be released
 * with a call to g_free() when no longer required.
 *
 * Returns:
 *  0 on success, -1 on error
 */</doc>
<def f='codebrowser/crypto/hmac.c' l='46' ll='71' type='int qcrypto_hmac_digestv(QCryptoHmac * hmac, const struct iovec * iov, size_t niov, char ** digest, Error ** errp)'/>
<use f='codebrowser/crypto/hmac.c' l='84' u='c' c='qcrypto_hmac_digest'/>
